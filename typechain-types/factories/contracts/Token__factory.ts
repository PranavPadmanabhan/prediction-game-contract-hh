/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Token, TokenInterface } from "../../contracts/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "Token__Withdraw_Error",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "miner",
        type: "address",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620023e3380380620023e3833981810160405281019062000037919062000281565b620000476200016a60201b60201c565b600a62000055919062000443565b8162000062919062000494565b6040518060400160405280600581526020017f544f4b454e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4e00000000000000000000000000000000000000000000000000000000008152508160039081620000df91906200074f565b508060049081620000f191906200074f565b505050600081116200013a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001319062000897565b60405180910390fd5b80608081815250505062000163620001576200017360201b60201c565b6200017b60201b60201c565b50620008b9565b60006012905090565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b6200025b8162000246565b81146200026757600080fd5b50565b6000815190506200027b8162000250565b92915050565b6000602082840312156200029a576200029962000241565b5b6000620002aa848285016200026a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200034157808604811115620003195762000318620002b3565b5b6001851615620003295780820291505b80810290506200033985620002e2565b9450620002f9565b94509492505050565b6000826200035c57600190506200042f565b816200036c57600090506200042f565b81600181146200038557600281146200039057620003c6565b60019150506200042f565b60ff841115620003a557620003a4620002b3565b5b8360020a915084821115620003bf57620003be620002b3565b5b506200042f565b5060208310610133831016604e8410600b8410161715620004005782820a905083811115620003fa57620003f9620002b3565b5b6200042f565b6200040f8484846001620002ef565b92509050818404811115620004295762000428620002b3565b5b81810290505b9392505050565b600060ff82169050919050565b6000620004508262000246565b91506200045d8362000436565b92506200048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200034a565b905092915050565b6000620004a18262000246565b9150620004ae8362000246565b9250828202620004be8162000246565b91508282048414831517620004d857620004d7620002b3565b5b5092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200056157607f821691505b60208210810362000577576200057662000519565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005e17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005a2565b620005ed8683620005a2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006306200062a620006248462000246565b62000605565b62000246565b9050919050565b6000819050919050565b6200064c836200060f565b620006646200065b8262000637565b848454620005af565b825550505050565b600090565b6200067b6200066c565b6200068881848462000641565b505050565b5b81811015620006b057620006a460008262000671565b6001810190506200068e565b5050565b601f821115620006ff57620006c9816200057d565b620006d48462000592565b81016020851015620006e4578190505b620006fc620006f38562000592565b8301826200068d565b50505b505050565b600082821c905092915050565b6000620007246000198460080262000704565b1980831691505092915050565b60006200073f838362000711565b9150826002028217905092915050565b6200075a82620004df565b67ffffffffffffffff811115620007765762000775620004ea565b5b62000782825462000548565b6200078f828285620006b4565b600060209050601f831160018114620007c75760008415620007b2578287015190505b620007be858262000731565b8655506200082e565b601f198416620007d7866200057d565b60005b828110156200080157848901518255600182019150602085019450602081019050620007da565b868310156200082157848901516200081d601f89168262000711565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332304361707065643a2063617020697320300000000000000000000000600082015250565b60006200087f60158362000836565b91506200088c8262000847565b602082019050919050565b60006020820190508181036000830152620008b28162000870565b9050919050565b608051611b0e620008d560003960006105570152611b0e6000f3fe6080604052600436106100fe5760003560e01c80633ccfd60b1161009557806395d89b411161006457806395d89b4114610306578063a457c2d714610331578063a9059cbb1461036e578063dd62ed3e146103ab578063f2fde38b146103e8576100fe565b80633ccfd60b1461027057806370a0823114610287578063715018a6146102c45780638da5cb5b146102db576100fe565b806323b872dd116100d157806323b872dd146101a0578063313ce567146101dd578063355274ea146102085780633950935114610233576100fe565b806306fdde0314610103578063095ea7b31461012e5780631249c58b1461016b57806318160ddd14610175575b600080fd5b34801561010f57600080fd5b50610118610411565b60405161012591906111a5565b60405180910390f35b34801561013a57600080fd5b5061015560048036038101906101509190611260565b6104a3565b60405161016291906112bb565b60405180910390f35b6101736104c6565b005b34801561018157600080fd5b5061018a610511565b60405161019791906112e5565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c29190611300565b61051b565b6040516101d491906112bb565b60405180910390f35b3480156101e957600080fd5b506101f261054a565b6040516101ff919061136f565b60405180910390f35b34801561021457600080fd5b5061021d610553565b60405161022a91906112e5565b60405180910390f35b34801561023f57600080fd5b5061025a60048036038101906102559190611260565b61057b565b60405161026791906112bb565b60405180910390f35b34801561027c57600080fd5b506102856105b2565b005b34801561029357600080fd5b506102ae60048036038101906102a9919061138a565b610678565b6040516102bb91906112e5565b60405180910390f35b3480156102d057600080fd5b506102d96106c0565b005b3480156102e757600080fd5b506102f06106d4565b6040516102fd91906113c6565b60405180910390f35b34801561031257600080fd5b5061031b6106fe565b60405161032891906111a5565b60405180910390f35b34801561033d57600080fd5b5061035860048036038101906103539190611260565b610790565b60405161036591906112bb565b60405180910390f35b34801561037a57600080fd5b5061039560048036038101906103909190611260565b610807565b6040516103a291906112bb565b60405180910390f35b3480156103b757600080fd5b506103d260048036038101906103cd91906113e1565b61082a565b6040516103df91906112e5565b60405180910390f35b3480156103f457600080fd5b5061040f600480360381019061040a919061138a565b6108b1565b005b60606003805461042090611450565b80601f016020809104026020016040519081016040528092919081815260200182805461044c90611450565b80156104995780601f1061046e57610100808354040283529160200191610499565b820191906000526020600020905b81548152906001019060200180831161047c57829003601f168201915b5050505050905090565b6000806104ae610934565b90506104bb81858561093c565b600191505092915050565b6104d833678ac7230489e80000610b05565b7f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d83360405161050791906113c6565b60405180910390a1565b6000600254905090565b600080610526610934565b9050610533858285610b6f565b61053e858585610bfb565b60019150509392505050565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080610586610934565b90506105a7818585610598858961082a565b6105a291906114b0565b61093c565b600191505092915050565b6105ba610e71565b60006105c46106d4565b905060008173ffffffffffffffffffffffffffffffffffffffff16476040516105ec90611515565b60006040518083038185875af1925050503d8060008114610629576040519150601f19603f3d011682016040523d82523d6000602084013e61062e565b606091505b505090508061067457816040517feb0c354c00000000000000000000000000000000000000000000000000000000815260040161066b91906113c6565b60405180910390fd5b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106c8610e71565b6106d26000610eef565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461070d90611450565b80601f016020809104026020016040519081016040528092919081815260200182805461073990611450565b80156107865780601f1061075b57610100808354040283529160200191610786565b820191906000526020600020905b81548152906001019060200180831161076957829003601f168201915b5050505050905090565b60008061079b610934565b905060006107a9828661082a565b9050838110156107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e59061159c565b60405180910390fd5b6107fb828686840361093c565b60019250505092915050565b600080610812610934565b905061081f818585610bfb565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6108b9610e71565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f9061162e565b60405180910390fd5b61093181610eef565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a2906116c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1190611752565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610af891906112e5565b60405180910390a3505050565b610b0d610553565b81610b16610511565b610b2091906114b0565b1115610b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b58906117be565b60405180910390fd5b610b6b8282610fb5565b5050565b6000610b7b848461082a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bf55781811015610be7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bde9061182a565b60405180910390fd5b610bf4848484840361093c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c61906118bc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd09061194e565b60405180910390fd5b610ce483838361110b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d61906119e0565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e5891906112e5565b60405180910390a3610e6b848484611110565b50505050565b610e79610934565b73ffffffffffffffffffffffffffffffffffffffff16610e976106d4565b73ffffffffffffffffffffffffffffffffffffffff1614610eed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee490611a4c565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611024576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101b90611ab8565b60405180910390fd5b6110306000838361110b565b806002600082825461104291906114b0565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110f391906112e5565b60405180910390a361110760008383611110565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561114f578082015181840152602081019050611134565b60008484015250505050565b6000601f19601f8301169050919050565b600061117782611115565b6111818185611120565b9350611191818560208601611131565b61119a8161115b565b840191505092915050565b600060208201905081810360008301526111bf818461116c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f7826111cc565b9050919050565b611207816111ec565b811461121257600080fd5b50565b600081359050611224816111fe565b92915050565b6000819050919050565b61123d8161122a565b811461124857600080fd5b50565b60008135905061125a81611234565b92915050565b60008060408385031215611277576112766111c7565b5b600061128585828601611215565b92505060206112968582860161124b565b9150509250929050565b60008115159050919050565b6112b5816112a0565b82525050565b60006020820190506112d060008301846112ac565b92915050565b6112df8161122a565b82525050565b60006020820190506112fa60008301846112d6565b92915050565b600080600060608486031215611319576113186111c7565b5b600061132786828701611215565b935050602061133886828701611215565b92505060406113498682870161124b565b9150509250925092565b600060ff82169050919050565b61136981611353565b82525050565b60006020820190506113846000830184611360565b92915050565b6000602082840312156113a05761139f6111c7565b5b60006113ae84828501611215565b91505092915050565b6113c0816111ec565b82525050565b60006020820190506113db60008301846113b7565b92915050565b600080604083850312156113f8576113f76111c7565b5b600061140685828601611215565b925050602061141785828601611215565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061146857607f821691505b60208210810361147b5761147a611421565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114bb8261122a565b91506114c68361122a565b92508282019050808211156114de576114dd611481565b5b92915050565b600081905092915050565b50565b60006114ff6000836114e4565b915061150a826114ef565b600082019050919050565b6000611520826114f2565b9150819050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611586602583611120565b91506115918261152a565b604082019050919050565b600060208201905081810360008301526115b581611579565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611618602683611120565b9150611623826115bc565b604082019050919050565b600060208201905081810360008301526116478161160b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006116aa602483611120565b91506116b58261164e565b604082019050919050565b600060208201905081810360008301526116d98161169d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061173c602283611120565b9150611747826116e0565b604082019050919050565b6000602082019050818103600083015261176b8161172f565b9050919050565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b60006117a8601983611120565b91506117b382611772565b602082019050919050565b600060208201905081810360008301526117d78161179b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611814601d83611120565b915061181f826117de565b602082019050919050565b6000602082019050818103600083015261184381611807565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006118a6602583611120565b91506118b18261184a565b604082019050919050565b600060208201905081810360008301526118d581611899565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611938602383611120565b9150611943826118dc565b604082019050919050565b600060208201905081810360008301526119678161192b565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006119ca602683611120565b91506119d58261196e565b604082019050919050565b600060208201905081810360008301526119f9816119bd565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a36602083611120565b9150611a4182611a00565b602082019050919050565b60006020820190508181036000830152611a6581611a29565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611aa2601f83611120565b9150611aad82611a6c565b602082019050919050565b60006020820190508181036000830152611ad181611a95565b905091905056fea264697066735822122099541c39d29560f35d2621fb4deaf5427cbf49ef8c1025d01138cc9cabf9960264736f6c63430008110033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    cap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(cap, overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    cap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(cap, overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
