/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PredictionContract,
  PredictionContractInterface,
} from "../../contracts/PredictionContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "entranceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Prediction__Limit_Exceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__Not_Enough_Amount",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__Refund_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__Reward_Failed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "predictedValue",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "predictedAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "difference",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "NewPrediction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getContest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
        ],
        internalType: "struct PredictionContract.Contest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContests",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
        ],
        internalType: "struct PredictionContract.Contest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfContests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfMaxPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getPredictions",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getResult",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getRewardArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getWinners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_predictedValue",
        type: "int256",
      },
    ],
    name: "predict",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "setDifference",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "setRewardArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260646006553480156200001657600080fd5b50604051620030ab380380620030ab83398181016040528101906200003c91906200047e565b426001819055508160808181525050826002908051906020019062000063929190620001a7565b508060a081815250506200007c6200008560201b60201c565b505050620005df565b60005b600280549050811015620001a45760006040518060400160405280600184620000b2919062000528565b815260200160028481548110620000ce57620000cd62000563565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505080806200019b9062000592565b91505062000088565b50565b82805482825590600052602060002090810192821562000223579160200282015b82811115620002225782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620001c8565b5b50905062000232919062000236565b5090565b5b808211156200025157600081600090555060010162000237565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002b9826200026e565b810181811067ffffffffffffffff82111715620002db57620002da6200027f565b5b80604052505050565b6000620002f062000255565b9050620002fe8282620002ae565b919050565b600067ffffffffffffffff8211156200032157620003206200027f565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003648262000337565b9050919050565b620003768162000357565b81146200038257600080fd5b50565b60008151905062000396816200036b565b92915050565b6000620003b3620003ad8462000303565b620002e4565b90508083825260208201905060208402830185811115620003d957620003d862000332565b5b835b81811015620004065780620003f1888262000385565b845260208401935050602081019050620003db565b5050509392505050565b600082601f83011262000428576200042762000269565b5b81516200043a8482602086016200039c565b91505092915050565b6000819050919050565b620004588162000443565b81146200046457600080fd5b50565b60008151905062000478816200044d565b92915050565b6000806000606084860312156200049a57620004996200025f565b5b600084015167ffffffffffffffff811115620004bb57620004ba62000264565b5b620004c98682870162000410565b9350506020620004dc8682870162000467565b9250506040620004ef8682870162000467565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620005358262000443565b9150620005428362000443565b92508282019050808211156200055d576200055c620004f9565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006200059f8262000443565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620005d457620005d3620004f9565b5b600182019050919050565b60805160a051612a7c6200062f600039600081816106a9015281816107af01526108e70152600081816104dd015281816107e8015281816111f1015281816116b8015261176a0152612a7c6000f3fe6080604052600436106101085760003560e01c80638bc4a5a5116100955780639e7a6ca4116100645780639e7a6ca414610384578063b94fe917146103a0578063bfaba76a146103de578063d74497c914610409578063f1813d511461042557610108565b80638bc4a5a5146102c3578063904b9f721461030057806391ad27b41461033d578063995e43391461036857610108565b8063320229eb116100dc578063320229eb146101c95780634585e33b146101f45780636997bae91461021d5780636b1426a4146102485780636e04ff0d1461028557610108565b80625347db1461010d57806309bc33a71461014a578063117973691461017557806313d1d85f146101a0575b600080fd5b34801561011957600080fd5b50610134600480360381019061012f9190611c40565b610462565b6040516101419190611d2b565b60405180910390f35b34801561015657600080fd5b5061015f6104d9565b60405161016c9190611d5c565b60405180910390f35b34801561018157600080fd5b5061018a610501565b6040516101979190611d5c565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c29190611c40565b61050d565b005b3480156101d557600080fd5b506101de610680565b6040516101eb9190611d5c565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190611ebd565b61068a565b005b34801561022957600080fd5b506102326106f2565b60405161023f9190611d5c565b60405180910390f35b34801561025457600080fd5b5061026f600480360381019061026a9190611c40565b6106fc565b60405161027c9190611ff6565b60405180910390f35b34801561029157600080fd5b506102ac60048036038101906102a79190611ebd565b6107a9565b6040516102ba9291906120b2565b60405180910390f35b3480156102cf57600080fd5b506102ea60048036038101906102e59190611c40565b6107e4565b6040516102f79190611d5c565b60405180910390f35b34801561030c57600080fd5b5061032760048036038101906103229190611c40565b61083b565b6040516103349190612111565b60405180910390f35b34801561034957600080fd5b506103526108e3565b60405161035f9190611d5c565b60405180910390f35b610382600480360381019061037d9190611c40565b61090b565b005b61039e60048036038101906103999190611c40565b61111c565b005b3480156103ac57600080fd5b506103c760048036038101906103c29190611c40565b611528565b6040516103d5929190612161565b60405180910390f35b3480156103ea57600080fd5b506103f3611599565b6040516104009190612268565b60405180910390f35b610423600480360381019061041e91906122b6565b611658565b005b34801561043157600080fd5b5061044c60048036038101906104479190611c40565b611868565b604051610459919061241c565b60405180910390f35b606060046000600184610475919061246d565b81526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104cd57602002820191906000526020600020905b8154815260200190600101908083116104b9575b50505050509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008080549050905090565b6000600a60084761051e91906124a1565b6105289190612512565b905060005b6003600060018561053e919061246d565b81526020019081526020016000208054905081101561067b57600081036105c25760046000600185610570919061246d565b8152602001908152602001600020600a60058461058d91906124a1565b6105979190612512565b9080600181540180825580915050600190039060005260206000200160009091909190915055610668565b600460006001856105d3919061246d565b8152602001908152602001600020600a6005600460006001886105f6919061246d565b8152602001908152602001600020600185610611919061246d565b8154811061062257610621612543565b5b906000526020600020015461063791906124a1565b6106419190612512565b90806001815401808255809150506001900390600052602060002001600090919091909150555b808061067390612572565b91505061052d565b505050565b6000600154905090565b60006106a4604051806020016040528060008152506107a9565b5090507f0000000000000000000000000000000000000000000000000000000000000000600154426106d6919061246d565b1180156106e05750805b156106ee576106ed611964565b5b5050565b6000600654905090565b60606005600060018461070f919061246d565b815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561079d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610753575b50505050509050919050565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426107dc919061246d565b119150915091565b60007f000000000000000000000000000000000000000000000000000000000000000060036000600185610818919061246d565b81526020019081526020016000208054905061083491906124a1565b9050919050565b610843611aa0565b6000600183610852919061246d565b8154811061086357610862612543565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6109148161111c565b61091c611ad0565b60005b60036000600185610930919061246d565b815260200190815260200160002080549050811015610e265760005b60018260036000600188610960919061246d565b81526020019081526020016000208054905061097c919061246d565b610986919061246d565b811015610e12576003600060018661099e919061246d565b81526020019081526020016000206001826109b991906125ba565b815481106109ca576109c9612543565b5b906000526020600020906005020160020154600360006001876109ed919061246d565b81526020019081526020016000208281548110610a0d57610a0c612543565b5b9060005260206000209060050201600201541180610b55575060036000600186610a37919061246d565b8152602001908152602001600020600182610a5291906125ba565b81548110610a6357610a62612543565b5b90600052602060002090600502016002015460036000600187610a86919061246d565b81526020019081526020016000208281548110610aa657610aa5612543565b5b906000526020600020906005020160020154148015610b54575060036000600186610ad1919061246d565b8152602001908152602001600020600182610aec91906125ba565b81548110610afd57610afc612543565b5b90600052602060002090600502016001015460036000600187610b20919061246d565b81526020019081526020016000208281548110610b4057610b3f612543565b5b906000526020600020906005020160010154115b5b15610dff5760036000600186610b6b919061246d565b81526020019081526020016000208181548110610b8b57610b8a612543565b5b90600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481525050925060036000600186610c35919061246d565b8152602001908152602001600020600182610c5091906125ba565b81548110610c6157610c60612543565b5b906000526020600020906005020160036000600187610c80919061246d565b81526020019081526020016000208281548110610ca057610c9f612543565b5b90600052602060002090600502016000820154816000015560018201548160010155600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600482015481600401559050508260036000600187610d52919061246d565b8152602001908152602001600020600183610d6d91906125ba565b81548110610d7e57610d7d612543565b5b906000526020600020906005020160008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401559050505b8080610e0a90612572565b91505061094c565b508080610e1e90612572565b91505061091f565b5060005b60036000600185610e3b919061246d565b81526020019081526020016000208054905081101561108a5760056000600185610e65919061246d565b815260200190815260200160002060036000600186610e84919061246d565b81526020019081526020016000208281548110610ea457610ea3612543565b5b906000526020600020906005020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060036000600186610f49919061246d565b81526020019081526020016000208281548110610f6957610f68612543565b5b906000526020600020906005020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660046000600187610fc2919061246d565b81526020019081526020016000208381548110610fe257610fe1612543565b5b9060005260206000200154604051610ff99061261f565b60006040518083038185875af1925050503d8060008114611036576040519150601f19603f3d011682016040523d82523d6000602084013e61103b565b606091505b5050905080611076576040517fc38289b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50808061108290612572565b915050610e2a565b506003600060018461109c919061246d565b815260200190815260200160002060006110b69190611b15565b600460006001846110c7919061246d565b815260200190815260200160002060006110e19190611b39565b7ffba192deaecbe7fa98bd977ab6a41d5e30515950160612a6341b3f3477568f68826040516111109190611d5c565b60405180910390a15050565b60056003600060018461112f919061246d565b815260200190815260200160002080549050101561133c5760005b6003600060018461115b919061246d565b8152602001908152602001600020805490508110156112ad57600060036000600185611187919061246d565b815260200190815260200160002082815481106111a7576111a6612543565b5b906000526020600020906005020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000060405161121c9061261f565b60006040518083038185875af1925050503d8060008114611259576040519150601f19603f3d011682016040523d82523d6000602084013e61125e565b606091505b5050905080611299576040517f2282ee5400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5080806112a590612572565b91505061114a565b50600360006001836112bf919061246d565b815260200190815260200160002060006112d99190611b15565b600460006001836112ea919061246d565b815260200190815260200160002060006113049190611b39565b7f564c0a2f5ba521d3247c4a3487b8c208198a1a72af1f3819ac9f48ecc29f2323816040516113339190611d5c565b60405180910390a15b6000806113996000600185611351919061246d565b8154811061136257611361612543565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166119a6565b915091506113a68361050d565b600560006001856113b7919061246d565b815260200190815260200160002060006113d19190611b5a565b60005b600360006001866113e5919061246d565b81526020019081526020016000208054905081101561152257600082600a61140d9190612767565b6003600060018861141e919061246d565b8152602001908152602001600020838154811061143e5761143d612543565b5b90600052602060002090600502016000015461145a91906127b2565b9050838112156114bb578084611470919061282a565b60036000600188611481919061246d565b815260200190815260200160002083815481106114a1576114a0612543565b5b90600052602060002090600502016002018190555061150e565b83816114c7919061282a565b600360006001886114d8919061246d565b815260200190815260200160002083815481106114f8576114f7612543565b5b9060005260206000209060050201600201819055505b50808061151a90612572565b9150506113d4565b50505050565b6000806000806115886000600187611540919061246d565b8154811061155157611550612543565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166119a6565b915091508181935093505050915091565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561164f5783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906115bd565b50505050905090565b6006546003600060018561166c919061246d565b81526020019081526020016000208054905011156116b6576040517fe45c23e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000341461170f576040517f39b4a2ec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036000600184611720919061246d565b81526020019081526020016000206040518060a00160405280838152602001428152602001600081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015550507f726fd38827c0988466fe6ed9ceb1334ceefdf9d631bcec2807f2e44885ea4c6e814260003360405161185c94939291906128c1565b60405180910390a15050565b60606003600060018461187b919061246d565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561195957838290600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481525050815260200190600101906118a9565b505050509050919050565b4260018190555060005b6000805490508110156119a35761199060018261198b91906125ba565b61090b565b808061199b90612572565b91505061196e565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156119f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1a9190612972565b50505091505060008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a919190612a19565b90508181935093505050915091565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060a00160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5080546000825560050290600052602060002090810190611b369190611b7b565b50565b5080546000825590600052602060002090810190611b579190611bd9565b50565b5080546000825590600052602060002090810190611b789190611bd9565b50565b5b80821115611bd557600080820160009055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000905550600501611b7c565b5090565b5b80821115611bf2576000816000905550600101611bda565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611c1d81611c0a565b8114611c2857600080fd5b50565b600081359050611c3a81611c14565b92915050565b600060208284031215611c5657611c55611c00565b5b6000611c6484828501611c2b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ca281611c0a565b82525050565b6000611cb48383611c99565b60208301905092915050565b6000602082019050919050565b6000611cd882611c6d565b611ce28185611c78565b9350611ced83611c89565b8060005b83811015611d1e578151611d058882611ca8565b9750611d1083611cc0565b925050600181019050611cf1565b5085935050505092915050565b60006020820190508181036000830152611d458184611ccd565b905092915050565b611d5681611c0a565b82525050565b6000602082019050611d716000830184611d4d565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611dca82611d81565b810181811067ffffffffffffffff82111715611de957611de8611d92565b5b80604052505050565b6000611dfc611bf6565b9050611e088282611dc1565b919050565b600067ffffffffffffffff821115611e2857611e27611d92565b5b611e3182611d81565b9050602081019050919050565b82818337600083830152505050565b6000611e60611e5b84611e0d565b611df2565b905082815260208101848484011115611e7c57611e7b611d7c565b5b611e87848285611e3e565b509392505050565b600082601f830112611ea457611ea3611d77565b5b8135611eb4848260208601611e4d565b91505092915050565b600060208284031215611ed357611ed2611c00565b5b600082013567ffffffffffffffff811115611ef157611ef0611c05565b5b611efd84828501611e8f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f5d82611f32565b9050919050565b611f6d81611f52565b82525050565b6000611f7f8383611f64565b60208301905092915050565b6000602082019050919050565b6000611fa382611f06565b611fad8185611f11565b9350611fb883611f22565b8060005b83811015611fe9578151611fd08882611f73565b9750611fdb83611f8b565b925050600181019050611fbc565b5085935050505092915050565b600060208201905081810360008301526120108184611f98565b905092915050565b60008115159050919050565b61202d81612018565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561206d578082015181840152602081019050612052565b60008484015250505050565b600061208482612033565b61208e818561203e565b935061209e81856020860161204f565b6120a781611d81565b840191505092915050565b60006040820190506120c76000830185612024565b81810360208301526120d98184612079565b90509392505050565b6040820160008201516120f86000850182611c99565b50602082015161210b6020850182611f64565b50505050565b600060408201905061212660008301846120e2565b92915050565b6000819050919050565b61213f8161212c565b82525050565b600060ff82169050919050565b61215b81612145565b82525050565b60006040820190506121766000830185612136565b6121836020830184612152565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6040820160008201516121cc6000850182611c99565b5060208201516121df6020850182611f64565b50505050565b60006121f183836121b6565b60408301905092915050565b6000602082019050919050565b60006122158261218a565b61221f8185612195565b935061222a836121a6565b8060005b8381101561225b57815161224288826121e5565b975061224d836121fd565b92505060018101905061222e565b5085935050505092915050565b60006020820190508181036000830152612282818461220a565b905092915050565b6122938161212c565b811461229e57600080fd5b50565b6000813590506122b08161228a565b92915050565b600080604083850312156122cd576122cc611c00565b5b60006122db85828601611c2b565b92505060206122ec858286016122a1565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61232b8161212c565b82525050565b60a0820160008201516123476000850182612322565b50602082015161235a6020850182611c99565b50604082015161236d6040850182611c99565b5060608201516123806060850182611f64565b5060808201516123936080850182611c99565b50505050565b60006123a58383612331565b60a08301905092915050565b6000602082019050919050565b60006123c9826122f6565b6123d38185612301565b93506123de83612312565b8060005b8381101561240f5781516123f68882612399565b9750612401836123b1565b9250506001810190506123e2565b5085935050505092915050565b6000602082019050818103600083015261243681846123be565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061247882611c0a565b915061248383611c0a565b925082820390508181111561249b5761249a61243e565b5b92915050565b60006124ac82611c0a565b91506124b783611c0a565b92508282026124c581611c0a565b915082820484148315176124dc576124db61243e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061251d82611c0a565b915061252883611c0a565b925082612538576125376124e3565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061257d82611c0a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036125af576125ae61243e565b5b600182019050919050565b60006125c582611c0a565b91506125d083611c0a565b92508282019050808211156125e8576125e761243e565b5b92915050565b600081905092915050565b50565b60006126096000836125ee565b9150612614826125f9565b600082019050919050565b600061262a826125fc565b9150819050919050565b60008160011c9050919050565b6000808291508390505b600185111561268b578086048111156126675761266661243e565b5b60018516156126765780820291505b808102905061268485612634565b945061264b565b94509492505050565b6000826126a45760019050612760565b816126b25760009050612760565b81600181146126c857600281146126d257612701565b6001915050612760565b60ff8411156126e4576126e361243e565b5b8360020a9150848211156126fb576126fa61243e565b5b50612760565b5060208310610133831016604e8410600b84101617156127365782820a9050838111156127315761273061243e565b5b612760565b6127438484846001612641565b9250905081840481111561275a5761275961243e565b5b81810290505b9392505050565b600061277282611c0a565b915061277d83612145565b92506127aa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612694565b905092915050565b60006127bd8261212c565b91506127c88361212c565b92508282026127d68161212c565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561280e5761280d61243e565b5b82820584148315176128235761282261243e565b5b5092915050565b60006128358261212c565b91506128408361212c565b92508282039050818112600084121682821360008512151617156128675761286661243e565b5b92915050565b6000819050919050565b6000819050919050565b600061289c6128976128928461286d565b612877565b611c0a565b9050919050565b6128ac81612881565b82525050565b6128bb81611f52565b82525050565b60006080820190506128d66000830187612136565b6128e36020830186611d4d565b6128f060408301856128a3565b6128fd60608301846128b2565b95945050505050565b600069ffffffffffffffffffff82169050919050565b61292581612906565b811461293057600080fd5b50565b6000815190506129428161291c565b92915050565b6000815190506129578161228a565b92915050565b60008151905061296c81611c14565b92915050565b600080600080600060a0868803121561298e5761298d611c00565b5b600061299c88828901612933565b95505060206129ad88828901612948565b94505060406129be8882890161295d565b93505060606129cf8882890161295d565b92505060806129e088828901612933565b9150509295509295909350565b6129f681612145565b8114612a0157600080fd5b50565b600081519050612a13816129ed565b92915050565b600060208284031215612a2f57612a2e611c00565b5b6000612a3d84828501612a04565b9150509291505056fea26469706673582212207d321c6320f4eb057b712e3cf7f3d964b3a55d539dab269832d7b04060f3b97064736f6c63430008110033";

type PredictionContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredictionContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredictionContract__factory extends ContractFactory {
  constructor(...args: PredictionContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    addresses: PromiseOrValue<string>[],
    entranceFee: PromiseOrValue<BigNumberish>,
    interval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PredictionContract> {
    return super.deploy(
      addresses,
      entranceFee,
      interval,
      overrides || {}
    ) as Promise<PredictionContract>;
  }
  override getDeployTransaction(
    addresses: PromiseOrValue<string>[],
    entranceFee: PromiseOrValue<BigNumberish>,
    interval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      addresses,
      entranceFee,
      interval,
      overrides || {}
    );
  }
  override attach(address: string): PredictionContract {
    return super.attach(address) as PredictionContract;
  }
  override connect(signer: Signer): PredictionContract__factory {
    return super.connect(signer) as PredictionContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredictionContractInterface {
    return new utils.Interface(_abi) as PredictionContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PredictionContract {
    return new Contract(address, _abi, signerOrProvider) as PredictionContract;
  }
}
