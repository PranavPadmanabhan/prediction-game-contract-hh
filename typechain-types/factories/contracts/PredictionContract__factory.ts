/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PredictionContract,
  PredictionContractInterface,
} from "../../contracts/PredictionContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "entranceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Prediction__Limit_Exceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__Not_Enough_Amount",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__TopUp_error",
    type: "error",
  },
  {
    inputs: [],
    name: "Withdraw__Failed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "predictedValue",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "predictedAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "difference",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "NewPrediction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ResultAnnounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "TopUpSuccessfull",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "WithdrawSuccessfull",
    type: "event",
  },
  {
    inputs: [],
    name: "addFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewards",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "automateResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getContest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
        ],
        internalType: "struct PredictionContract.Contest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getContestPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContests",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
        ],
        internalType: "struct PredictionContract.Contest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfContests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfMaxPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getPredictions",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getWinners",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_predictedValue",
        type: "int256",
      },
    ],
    name: "predict",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260646006553480156200001657600080fd5b50604051620026ea380380620026ea83398181016040528101906200003c9190620004b2565b426001819055508160a08181525050826002908051906020019062000063929190620001db565b508060c081815250503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000b0620000b960201b60201c565b50505062000613565b60005b600280549050811015620001d85760006040518060400160405280600184620000e691906200055c565b81526020016002848154811062000102576200010162000597565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508080620001cf90620005c6565b915050620000bc565b50565b82805482825590600052602060002090810192821562000257579160200282015b82811115620002565782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620001fc565b5b5090506200026691906200026a565b5090565b5b80821115620002855760008160009055506001016200026b565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002ed82620002a2565b810181811067ffffffffffffffff821117156200030f576200030e620002b3565b5b80604052505050565b60006200032462000289565b9050620003328282620002e2565b919050565b600067ffffffffffffffff821115620003555762000354620002b3565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000398826200036b565b9050919050565b620003aa816200038b565b8114620003b657600080fd5b50565b600081519050620003ca816200039f565b92915050565b6000620003e7620003e18462000337565b62000318565b905080838252602082019050602084028301858111156200040d576200040c62000366565b5b835b818110156200043a5780620004258882620003b9565b8452602084019350506020810190506200040f565b5050509392505050565b600082601f8301126200045c576200045b6200029d565b5b81516200046e848260208601620003d0565b91505092915050565b6000819050919050565b6200048c8162000477565b81146200049857600080fd5b50565b600081519050620004ac8162000481565b92915050565b600080600060608486031215620004ce57620004cd62000293565b5b600084015167ffffffffffffffff811115620004ef57620004ee62000298565b5b620004fd8682870162000444565b935050602062000510868287016200049b565b925050604062000523868287016200049b565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620005698262000477565b9150620005768362000477565b92508282019050808211156200059157620005906200052d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000620005d38262000477565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200060857620006076200052d565b5b600182019050919050565b60805160a05160c05161206f6200067b60003960008181610a3b0152610be40152600081816104d301528181610505015281816107a101528181610ae501528181610c0a01528181610ed501528181610fc7015261108501526000610abd015261206f6000f3fe60806040526004361061011f5760003560e01c8063893d20e8116100a0578063b94fe91711610064578063b94fe917146103d0578063bfaba76a1461040e578063d27e80b514610439578063d74497c914610476578063f1813d51146104925761011f565b8063893d20e8146102f65780638bc4a5a514610321578063904b9f721461035e57806391ad27b41461039b578063a26759cb146103c65761011f565b80636892a601116100e75780636892a601146101ea5780636997bae9146102135780636b1426a41461023e5780636e04ff0d1461027b57806370a08231146102b95761011f565b806309bc33a714610124578063117973691461014f5780632e1a7d4d1461017a578063320229eb146101965780634585e33b146101c1575b600080fd5b34801561013057600080fd5b506101396104cf565b604051610146919061137c565b60405180910390f35b34801561015b57600080fd5b506101646104f7565b604051610171919061137c565b60405180910390f35b610194600480360381019061018f91906113d7565b610503565b005b3480156101a257600080fd5b506101ab6106dd565b6040516101b8919061137c565b60405180910390f35b3480156101cd57600080fd5b506101e860048036038101906101e3919061154a565b6106e7565b005b3480156101f657600080fd5b50610211600480360381019061020c919061177c565b610742565b005b34801561021f57600080fd5b5061022861092f565b604051610235919061137c565b60405180910390f35b34801561024a57600080fd5b50610265600480360381019061026091906113d7565b610939565b6040516102729190611955565b60405180910390f35b34801561028757600080fd5b506102a2600480360381019061029d919061154a565b610a35565b6040516102b0929190611a11565b60405180910390f35b3480156102c557600080fd5b506102e060048036038101906102db9190611a41565b610a70565b6040516102ed919061137c565b60405180910390f35b34801561030257600080fd5b5061030b610ab9565b6040516103189190611a7d565b60405180910390f35b34801561032d57600080fd5b50610348600480360381019061034391906113d7565b610ae1565b604051610355919061137c565b60405180910390f35b34801561036a57600080fd5b50610385600480360381019061038091906113d7565b610b38565b6040516103929190611ac7565b60405180910390f35b3480156103a757600080fd5b506103b0610be0565b6040516103bd919061137c565b60405180910390f35b6103ce610c08565b005b3480156103dc57600080fd5b506103f760048036038101906103f291906113d7565b610cf3565b604051610405929190611b0d565b60405180910390f35b34801561041a57600080fd5b50610423610d64565b6040516104309190611c14565b60405180910390f35b34801561044557600080fd5b50610460600480360381019061045b91906113d7565b610e23565b60405161046d919061137c565b60405180910390f35b610490600480360381019061048b9190611c62565b610e4c565b005b34801561049e57600080fd5b506104b960048036038101906104b491906113d7565b61113d565b6040516104c69190611955565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008080549050905090565b7f0000000000000000000000000000000000000000000000000000000000000000811080156105705750600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481115b156105a7576040517f3fb6985b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516105cd90611cd3565b60006040518083038185875af1925050503d806000811461060a576040519150601f19603f3d011682016040523d82523d6000602084013e61060f565b606091505b505090508061064a576040517f3fb6985b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106999190611d17565b925050819055507f79d6154499fe61db70df5e974d6947219675596a035f25c56e2dc7575d04187a82336040516106d1929190611d4b565b60405180910390a15050565b6000600154905090565b600061070160405180602001604052806000815250610a35565b509050801561073e57426001819055507f4341dddeeae96cb085a30b68a8c3e38b00f5b7c5ff4fa9f31079e5b41a9c69ad60405160405180910390a15b5050565b600360006001836107539190611d17565b815260200190815260200160002080549050600760006001846107769190611d17565b815260200190815260200160002081905550600654835110156108485760005b8351811015610842577f0000000000000000000000000000000000000000000000000000000000000000600560008684815181106107d7576107d6611d74565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108289190611da3565b92505081905550808061083a90611dd7565b915050610796565b506108f3565b60005b83518110156108f15782818151811061086757610866611d74565b5b60200260200101516005600086848151811061088657610885611d74565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108d79190611da3565b9250508190555080806108e990611dd7565b91505061084b565b505b7ffba192deaecbe7fa98bd977ab6a41d5e30515950160612a6341b3f3477568f6881604051610922919061137c565b60405180910390a1505050565b6000600654905090565b60606004600060018461094c9190611d17565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a2a57838290600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815250508152602001906001019061097a565b505050509050919050565b600060607f000000000000000000000000000000000000000000000000000000000000000060015442610a689190611d17565b119150915091565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f000000000000000000000000000000000000000000000000000000000000000060036000600185610b159190611d17565b815260200190815260200160002080549050610b319190611e1f565b9050919050565b610b40611333565b6000600183610b4f9190611d17565b81548110610b6057610b5f611d74565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f0000000000000000000000000000000000000000000000000000000000000000341015610c62576040517f818f734e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cb19190611da3565b925050819055507f30235040a226b2e9a074ef96d790e10e9ce5f2be30aaf8049fda6a5e03f144273433604051610ce9929190611d4b565b60405180910390a1565b600080600080610d536000600187610d0b9190611d17565b81548110610d1c57610d1b611d74565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611239565b915091508181935093505050915091565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610e1a5783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610d88565b50505050905090565b600060076000600184610e369190611d17565b8152602001908152602001600020549050919050565b60076000600184610e5d9190611d17565b815260200190815260200160002054600654610e799190611da3565b60036000600185610e8a9190611d17565b81526020019081526020016000208054905010610ed3576040517fe45c23e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610f6c576040517f39b4a2ec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036000600184610f7d9190611d17565b81526020019081526020016000206040518060a00160405280838152602001428152602001600081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015550507f0000000000000000000000000000000000000000000000000000000000000000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110f29190611d17565b925050819055507f3a63f877abc26c9d8968076e2171dea3f3e5da8cb52d749794ebe85aeb3c9892814260003386604051611131959493929190611ea6565b60405180910390a15050565b6060600360006001846111509190611d17565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561122e57838290600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815250508152602001906001019061117e565b505050509050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ad9190611f65565b50505091505060008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611300573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611324919061200c565b90508181935093505050915091565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000819050919050565b61137681611363565b82525050565b6000602082019050611391600083018461136d565b92915050565b6000604051905090565b600080fd5b600080fd5b6113b481611363565b81146113bf57600080fd5b50565b6000813590506113d1816113ab565b92915050565b6000602082840312156113ed576113ec6113a1565b5b60006113fb848285016113c2565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114578261140e565b810181811067ffffffffffffffff821117156114765761147561141f565b5b80604052505050565b6000611489611397565b9050611495828261144e565b919050565b600067ffffffffffffffff8211156114b5576114b461141f565b5b6114be8261140e565b9050602081019050919050565b82818337600083830152505050565b60006114ed6114e88461149a565b61147f565b90508281526020810184848401111561150957611508611409565b5b6115148482856114cb565b509392505050565b600082601f83011261153157611530611404565b5b81356115418482602086016114da565b91505092915050565b6000602082840312156115605761155f6113a1565b5b600082013567ffffffffffffffff81111561157e5761157d6113a6565b5b61158a8482850161151c565b91505092915050565b600067ffffffffffffffff8211156115ae576115ad61141f565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115ef826115c4565b9050919050565b6115ff816115e4565b811461160a57600080fd5b50565b60008135905061161c816115f6565b92915050565b600061163561163084611593565b61147f565b90508083825260208201905060208402830185811115611658576116576115bf565b5b835b81811015611681578061166d888261160d565b84526020840193505060208101905061165a565b5050509392505050565b600082601f8301126116a05761169f611404565b5b81356116b0848260208601611622565b91505092915050565b600067ffffffffffffffff8211156116d4576116d361141f565b5b602082029050602081019050919050565b60006116f86116f3846116b9565b61147f565b9050808382526020820190506020840283018581111561171b5761171a6115bf565b5b835b81811015611744578061173088826113c2565b84526020840193505060208101905061171d565b5050509392505050565b600082601f83011261176357611762611404565b5b81356117738482602086016116e5565b91505092915050565b600080600060608486031215611795576117946113a1565b5b600084013567ffffffffffffffff8111156117b3576117b26113a6565b5b6117bf8682870161168b565b935050602084013567ffffffffffffffff8111156117e0576117df6113a6565b5b6117ec8682870161174e565b92505060406117fd868287016113c2565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61184681611833565b82525050565b61185581611363565b82525050565b611864816115e4565b82525050565b60a082016000820151611880600085018261183d565b506020820151611893602085018261184c565b5060408201516118a6604085018261184c565b5060608201516118b9606085018261185b565b5060808201516118cc608085018261184c565b50505050565b60006118de838361186a565b60a08301905092915050565b6000602082019050919050565b600061190282611807565b61190c8185611812565b935061191783611823565b8060005b8381101561194857815161192f88826118d2565b975061193a836118ea565b92505060018101905061191b565b5085935050505092915050565b6000602082019050818103600083015261196f81846118f7565b905092915050565b60008115159050919050565b61198c81611977565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119cc5780820151818401526020810190506119b1565b60008484015250505050565b60006119e382611992565b6119ed818561199d565b93506119fd8185602086016119ae565b611a068161140e565b840191505092915050565b6000604082019050611a266000830185611983565b8181036020830152611a3881846119d8565b90509392505050565b600060208284031215611a5757611a566113a1565b5b6000611a658482850161160d565b91505092915050565b611a77816115e4565b82525050565b6000602082019050611a926000830184611a6e565b92915050565b604082016000820151611aae600085018261184c565b506020820151611ac1602085018261185b565b50505050565b6000604082019050611adc6000830184611a98565b92915050565b611aeb81611833565b82525050565b600060ff82169050919050565b611b0781611af1565b82525050565b6000604082019050611b226000830185611ae2565b611b2f6020830184611afe565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b604082016000820151611b78600085018261184c565b506020820151611b8b602085018261185b565b50505050565b6000611b9d8383611b62565b60408301905092915050565b6000602082019050919050565b6000611bc182611b36565b611bcb8185611b41565b9350611bd683611b52565b8060005b83811015611c07578151611bee8882611b91565b9750611bf983611ba9565b925050600181019050611bda565b5085935050505092915050565b60006020820190508181036000830152611c2e8184611bb6565b905092915050565b611c3f81611833565b8114611c4a57600080fd5b50565b600081359050611c5c81611c36565b92915050565b60008060408385031215611c7957611c786113a1565b5b6000611c87858286016113c2565b9250506020611c9885828601611c4d565b9150509250929050565b600081905092915050565b50565b6000611cbd600083611ca2565b9150611cc882611cad565b600082019050919050565b6000611cde82611cb0565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d2282611363565b9150611d2d83611363565b9250828203905081811115611d4557611d44611ce8565b5b92915050565b6000604082019050611d60600083018561136d565b611d6d6020830184611a6e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611dae82611363565b9150611db983611363565b9250828201905080821115611dd157611dd0611ce8565b5b92915050565b6000611de282611363565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e1457611e13611ce8565b5b600182019050919050565b6000611e2a82611363565b9150611e3583611363565b9250828202611e4381611363565b91508282048414831517611e5a57611e59611ce8565b5b5092915050565b6000819050919050565b6000819050919050565b6000611e90611e8b611e8684611e61565b611e6b565b611363565b9050919050565b611ea081611e75565b82525050565b600060a082019050611ebb6000830188611ae2565b611ec8602083018761136d565b611ed56040830186611e97565b611ee26060830185611a6e565b611eef608083018461136d565b9695505050505050565b600069ffffffffffffffffffff82169050919050565b611f1881611ef9565b8114611f2357600080fd5b50565b600081519050611f3581611f0f565b92915050565b600081519050611f4a81611c36565b92915050565b600081519050611f5f816113ab565b92915050565b600080600080600060a08688031215611f8157611f806113a1565b5b6000611f8f88828901611f26565b9550506020611fa088828901611f3b565b9450506040611fb188828901611f50565b9350506060611fc288828901611f50565b9250506080611fd388828901611f26565b9150509295509295909350565b611fe981611af1565b8114611ff457600080fd5b50565b60008151905061200681611fe0565b92915050565b600060208284031215612022576120216113a1565b5b600061203084828501611ff7565b9150509291505056fea26469706673582212208df2286f9be7d0a1081e755fa593886397f17c4768d72fe5810fa5a74250330b64736f6c63430008110033";

type PredictionContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredictionContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredictionContract__factory extends ContractFactory {
  constructor(...args: PredictionContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    addresses: PromiseOrValue<string>[],
    entranceFee: PromiseOrValue<BigNumberish>,
    interval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PredictionContract> {
    return super.deploy(
      addresses,
      entranceFee,
      interval,
      overrides || {}
    ) as Promise<PredictionContract>;
  }
  override getDeployTransaction(
    addresses: PromiseOrValue<string>[],
    entranceFee: PromiseOrValue<BigNumberish>,
    interval: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      addresses,
      entranceFee,
      interval,
      overrides || {}
    );
  }
  override attach(address: string): PredictionContract {
    return super.attach(address) as PredictionContract;
  }
  override connect(signer: Signer): PredictionContract__factory {
    return super.connect(signer) as PredictionContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredictionContractInterface {
    return new utils.Interface(_abi) as PredictionContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PredictionContract {
    return new Contract(address, _abi, signerOrProvider) as PredictionContract;
  }
}
