/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PredictionContract,
  PredictionContractInterface,
} from "../../contracts/PredictionContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "entranceFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "rewards",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Prediction__Limit_Exceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__Not_Enough_Amount",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__TopUp_error",
    type: "error",
  },
  {
    inputs: [],
    name: "Withdraw__Failed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "predictedValue",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "predictedAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "difference",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "NewPrediction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "TopUpSuccessfull",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "WithdrawSuccessfull",
    type: "event",
  },
  {
    inputs: [],
    name: "addFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getContest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
        ],
        internalType: "struct PredictionContract.Contest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContests",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
        ],
        internalType: "struct PredictionContract.Contest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfContests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfMaxPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getPredictions",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getRefundOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getResult",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getRewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getSortedArray",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getWinners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_predictedValue",
        type: "int256",
      },
    ],
    name: "predict",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "refundScheme",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "sort",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "updateDifference",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260196008553480156200001657600080fd5b5060405162002fc838038062002fc883398181016040528101906200003c9190620005f4565b426001819055508260a08181525050836002908051906020019062000063929190620001f5565b508160c0818152505080600e90805190602001906200008492919062000284565b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000c9620000d360201b60201c565b505050506200078a565b60005b600280549050811015620001f25760006040518060400160405280600184620001009190620006d3565b8152602001600284815481106200011c576200011b6200070e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508080620001e9906200073d565b915050620000d6565b50565b82805482825590600052602060002090810192821562000271579160200282015b82811115620002705782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000216565b5b509050620002809190620002d6565b5090565b828054828255906000526020600020908101928215620002c3579160200282015b82811115620002c2578251825591602001919060010190620002a5565b5b509050620002d29190620002d6565b5090565b5b80821115620002f1576000816000905550600101620002d7565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000359826200030e565b810181811067ffffffffffffffff821117156200037b576200037a6200031f565b5b80604052505050565b600062000390620002f5565b90506200039e82826200034e565b919050565b600067ffffffffffffffff821115620003c157620003c06200031f565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040482620003d7565b9050919050565b6200041681620003f7565b81146200042257600080fd5b50565b60008151905062000436816200040b565b92915050565b6000620004536200044d84620003a3565b62000384565b90508083825260208201905060208402830185811115620004795762000478620003d2565b5b835b81811015620004a6578062000491888262000425565b8452602084019350506020810190506200047b565b5050509392505050565b600082601f830112620004c857620004c762000309565b5b8151620004da8482602086016200043c565b91505092915050565b6000819050919050565b620004f881620004e3565b81146200050457600080fd5b50565b6000815190506200051881620004ed565b92915050565b600067ffffffffffffffff8211156200053c576200053b6200031f565b5b602082029050602081019050919050565b6000620005646200055e846200051e565b62000384565b905080838252602082019050602084028301858111156200058a5762000589620003d2565b5b835b81811015620005b75780620005a2888262000507565b8452602084019350506020810190506200058c565b5050509392505050565b600082601f830112620005d957620005d862000309565b5b8151620005eb8482602086016200054d565b91505092915050565b60008060008060808587031215620006115762000610620002ff565b5b600085015167ffffffffffffffff81111562000632576200063162000304565b5b6200064087828801620004b0565b9450506020620006538782880162000507565b9350506040620006668782880162000507565b925050606085015167ffffffffffffffff8111156200068a576200068962000304565b5b6200069887828801620005c1565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006e082620004e3565b9150620006ed83620004e3565b9250828201905080821115620007085762000707620006a4565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006200074a82620004e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036200077f576200077e620006a4565b5b600182019050919050565b60805160a05160c0516127d6620007f260003960008181610b2a0152610cd301526000818161064b015281816106a40152818161082201528181610bd401528181610f3c0152818161140e0152818161150001526115be01526000610bac01526127d66000f3fe6080604052600436106101665760003560e01c80638bc4a5a5116100d1578063b64aa8591161008a578063bfaba76a11610064578063bfaba76a14610586578063d74497c9146105b1578063f1813d51146105cd578063fe9138651461060a57610166565b8063b64aa859146104ce578063b94fe9171461050b578063b973b4f61461054957610166565b80638bc4a5a5146103a5578063904b9f72146103e257806391ad27b41461041f5780639313d5051461044a578063995e433914610487578063a26759cb146104c457610166565b80634585e33b116101235780634585e33b1461026e5780636997bae9146102975780636b1426a4146102c25780636e04ff0d146102ff57806370a082311461033d578063893d20e81461037a57610166565b806309bc33a71461016b57806311797369146101965780631e18f5a5146101c15780632154eaef146101fe5780632e1a7d4d14610227578063320229eb14610243575b600080fd5b34801561017757600080fd5b50610180610647565b60405161018d9190611bb3565b60405180910390f35b3480156101a257600080fd5b506101ab61066f565b6040516101b89190611bb3565b60405180910390f35b3480156101cd57600080fd5b506101e860048036038101906101e39190611c0e565b61067b565b6040516101f59190611dbb565b60405180910390f35b34801561020a57600080fd5b5061022560048036038101906102209190611ddd565b61068d565b005b610241600480360381019061023c9190611c0e565b610820565b005b34801561024f57600080fd5b506102586109fa565b6040516102659190611bb3565b60405180910390f35b34801561027a57600080fd5b5061029560048036038101906102909190611f63565b610a04565b005b3480156102a357600080fd5b506102ac610a6d565b6040516102b99190611bb3565b60405180910390f35b3480156102ce57600080fd5b506102e960048036038101906102e49190611c0e565b610a77565b6040516102f6919061205b565b60405180910390f35b34801561030b57600080fd5b5061032660048036038101906103219190611f63565b610b24565b604051610334929190612117565b60405180910390f35b34801561034957600080fd5b50610364600480360381019061035f9190612173565b610b5f565b6040516103719190611bb3565b60405180910390f35b34801561038657600080fd5b5061038f610ba8565b60405161039c91906121af565b60405180910390f35b3480156103b157600080fd5b506103cc60048036038101906103c79190611c0e565b610bd0565b6040516103d99190611bb3565b60405180910390f35b3480156103ee57600080fd5b5061040960048036038101906104049190611c0e565b610c27565b60405161041691906121f9565b60405180910390f35b34801561042b57600080fd5b50610434610ccf565b6040516104419190611bb3565b60405180910390f35b34801561045657600080fd5b50610471600480360381019061046c9190612173565b610cf7565b60405161047e9190611bb3565b60405180910390f35b34801561049357600080fd5b506104ae60048036038101906104a99190611c0e565b610d40565b6040516104bb9190611dbb565b60405180910390f35b6104cc610f3a565b005b3480156104da57600080fd5b506104f560048036038101906104f09190611c0e565b611025565b6040516105029190611dbb565b60405180910390f35b34801561051757600080fd5b50610532600480360381019061052d9190611c0e565b611235565b60405161054092919061223f565b60405180910390f35b34801561055557600080fd5b50610570600480360381019061056b9190612173565b6112a6565b60405161057d9190611bb3565b60405180910390f35b34801561059257600080fd5b5061059b6112ef565b6040516105a89190612346565b60405180910390f35b6105cb60048036038101906105c69190612394565b6113ae565b005b3480156105d957600080fd5b506105f460048036038101906105ef9190611c0e565b611674565b6040516106019190611dbb565b60405180910390f35b34801561061657600080fd5b50610631600480360381019061062c9190611c0e565b611770565b60405161063e9190611dbb565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008080549050905090565b606061068682611770565b9050919050565b60085481101561081c5760005b8181101561078d577f000000000000000000000000000000000000000000000000000000000000000060076000600360006001886106d89190612403565b815260200190815260200160002084815481106106f8576106f7612437565b5b906000526020600020906005020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107739190612466565b9250508190555080806107859061249a565b91505061069a565b506003600060018461079f9190612403565b815260200190815260200160002060006107b99190611a65565b7f564c0a2f5ba521d3247c4a3487b8c208198a1a72af1f3819ac9f48ecc29f2323826040516107e89190611bb3565b60405180910390a1600460006001846108019190612403565b8152602001908152602001600020600061081b9190611a89565b5b5050565b7f00000000000000000000000000000000000000000000000000000000000000008110801561088d5750600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481115b156108c4576040517f3fb6985b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16826040516108ea90612513565b60006040518083038185875af1925050503d8060008114610927576040519150601f19603f3d011682016040523d82523d6000602084013e61092c565b606091505b5050905080610967576040517f3fb6985b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109b69190612403565b925050819055507f79d6154499fe61db70df5e974d6947219675596a035f25c56e2dc7575d04187a82336040516109ee929190612528565b60405180910390a15050565b6000600154905090565b6000610a1e60405180602001604052806000815250610b24565b5090508015610a625760005b600080549050811015610a6057610a4c600182610a479190612466565b610d40565b508080610a589061249a565b915050610a2a565b505b426001819055505050565b6000600854905090565b606060046000600184610a8a9190612403565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610b1857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ace575b50505050509050919050565b600060607f000000000000000000000000000000000000000000000000000000000000000060015442610b579190612403565b119150915091565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f000000000000000000000000000000000000000000000000000000000000000060036000600185610c049190612403565b815260200190815260200160002080549050610c209190612551565b9050919050565b610c2f611aaa565b6000600183610c3e9190612403565b81548110610c4f57610c4e612437565b5b9060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610d6e8260036000600186610d579190612403565b81526020019081526020016000208054905061068d565b6000610d7983611770565b905060005b600e80549050811015610ece5760046000600186610d9c9190612403565b8152602001908152602001600020828281518110610dbd57610dbc612437565b5b6020026020010151606001519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600e8181548110610e3d57610e3c612437565b5b906000526020600020015460076000848481518110610e5f57610e5e612437565b5b60200260200101516060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eb49190612466565b925050819055508080610ec69061249a565b915050610d7e565b5060036000600185610ee09190612403565b81526020019081526020016000206000610efa9190611a65565b7ffba192deaecbe7fa98bd977ab6a41d5e30515950160612a6341b3f3477568f6883604051610f299190611bb3565b60405180910390a180915050919050565b7f0000000000000000000000000000000000000000000000000000000000000000341015610f94576040517f818f734e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fe39190612466565b925050819055507f30235040a226b2e9a074ef96d790e10e9ce5f2be30aaf8049fda6a5e03f14427343360405161101b929190612528565b60405180910390a1565b60606000611083600060018561103b9190612403565b8154811061104c5761104b612437565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661196b565b5090506000600360006001866110999190612403565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561117757838290600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481525050815260200190600101906110c7565b50505050905060005b815181101561122a57600082828151811061119e5761119d612437565b5b60200260200101516000015190508381126111e65783816111bf9190612593565b8383815181106111d2576111d1612437565b5b602002602001015160400181815250611215565b80846111f29190612593565b83838151811061120557611204612437565b5b6020026020010151604001818152505b505080806112229061249a565b915050611180565b508092505050919050565b600080600080611295600060018761124d9190612403565b8154811061125e5761125d612437565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661196b565b915091508181935093505050915091565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156113a55783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190611313565b50505050905090565b600854600360006001856113c29190612403565b815260200190815260200160002080549050111561140c576040517fe45c23e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156114a5576040517f39b4a2ec00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360006001846114b69190612403565b81526020019081526020016000206040518060a00160405280838152602001428152602001600081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020017f0000000000000000000000000000000000000000000000000000000000000000815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015550507f0000000000000000000000000000000000000000000000000000000000000000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461162b9190612403565b925050819055507f726fd38827c0988466fe6ed9ceb1334ceefdf9d631bcec2807f2e44885ea4c6e8142600033604051611668949392919061261b565b60405180910390a15050565b6060600360006001846116879190612403565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561176557838290600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481525050815260200190600101906116b5565b505050509050919050565b606061177a611ada565b600061178584611025565b905060005b81518110156119605760005b60018284516117a59190612403565b6117af9190612403565b81101561194c57826001826117c49190612466565b815181106117d5576117d4612437565b5b6020026020010151604001518382815181106117f4576117f3612437565b5b60200260200101516040015111806118a65750826001826118159190612466565b8151811061182657611825612437565b5b60200260200101516040015183828151811061184557611844612437565b5b6020026020010151604001511480156118a55750826001826118679190612466565b8151811061187857611877612437565b5b60200260200101516020015183828151811061189757611896612437565b5b602002602001015160200151115b5b15611939578281815181106118be576118bd612437565b5b60200260200101519350826001826118d69190612466565b815181106118e7576118e6612437565b5b602002602001015183828151811061190257611901612437565b5b6020026020010181905250838360018361191c9190612466565b8151811061192d5761192c612437565b5b60200260200101819052505b80806119449061249a565b915050611796565b5080806119589061249a565b91505061178a565b508092505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156119bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119df91906126cc565b50505091505060008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a569190612773565b90508181935093505050915091565b5080546000825560050290600052602060002090810190611a869190611b1f565b50565b5080546000825590600052602060002090810190611aa79190611b7d565b50565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060a00160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b80821115611b7957600080820160009055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000905550600501611b20565b5090565b5b80821115611b96576000816000905550600101611b7e565b5090565b6000819050919050565b611bad81611b9a565b82525050565b6000602082019050611bc86000830184611ba4565b92915050565b6000604051905090565b600080fd5b600080fd5b611beb81611b9a565b8114611bf657600080fd5b50565b600081359050611c0881611be2565b92915050565b600060208284031215611c2457611c23611bd8565b5b6000611c3284828501611bf9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611c7a81611c67565b82525050565b611c8981611b9a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cba82611c8f565b9050919050565b611cca81611caf565b82525050565b60a082016000820151611ce66000850182611c71565b506020820151611cf96020850182611c80565b506040820151611d0c6040850182611c80565b506060820151611d1f6060850182611cc1565b506080820151611d326080850182611c80565b50505050565b6000611d448383611cd0565b60a08301905092915050565b6000602082019050919050565b6000611d6882611c3b565b611d728185611c46565b9350611d7d83611c57565b8060005b83811015611dae578151611d958882611d38565b9750611da083611d50565b925050600181019050611d81565b5085935050505092915050565b60006020820190508181036000830152611dd58184611d5d565b905092915050565b60008060408385031215611df457611df3611bd8565b5b6000611e0285828601611bf9565b9250506020611e1385828601611bf9565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e7082611e27565b810181811067ffffffffffffffff82111715611e8f57611e8e611e38565b5b80604052505050565b6000611ea2611bce565b9050611eae8282611e67565b919050565b600067ffffffffffffffff821115611ece57611ecd611e38565b5b611ed782611e27565b9050602081019050919050565b82818337600083830152505050565b6000611f06611f0184611eb3565b611e98565b905082815260208101848484011115611f2257611f21611e22565b5b611f2d848285611ee4565b509392505050565b600082601f830112611f4a57611f49611e1d565b5b8135611f5a848260208601611ef3565b91505092915050565b600060208284031215611f7957611f78611bd8565b5b600082013567ffffffffffffffff811115611f9757611f96611bdd565b5b611fa384828501611f35565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611fe48383611cc1565b60208301905092915050565b6000602082019050919050565b600061200882611fac565b6120128185611fb7565b935061201d83611fc8565b8060005b8381101561204e5781516120358882611fd8565b975061204083611ff0565b925050600181019050612021565b5085935050505092915050565b600060208201905081810360008301526120758184611ffd565b905092915050565b60008115159050919050565b6120928161207d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120d25780820151818401526020810190506120b7565b60008484015250505050565b60006120e982612098565b6120f381856120a3565b93506121038185602086016120b4565b61210c81611e27565b840191505092915050565b600060408201905061212c6000830185612089565b818103602083015261213e81846120de565b90509392505050565b61215081611caf565b811461215b57600080fd5b50565b60008135905061216d81612147565b92915050565b60006020828403121561218957612188611bd8565b5b60006121978482850161215e565b91505092915050565b6121a981611caf565b82525050565b60006020820190506121c460008301846121a0565b92915050565b6040820160008201516121e06000850182611c80565b5060208201516121f36020850182611cc1565b50505050565b600060408201905061220e60008301846121ca565b92915050565b61221d81611c67565b82525050565b600060ff82169050919050565b61223981612223565b82525050565b60006040820190506122546000830185612214565b6122616020830184612230565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6040820160008201516122aa6000850182611c80565b5060208201516122bd6020850182611cc1565b50505050565b60006122cf8383612294565b60408301905092915050565b6000602082019050919050565b60006122f382612268565b6122fd8185612273565b935061230883612284565b8060005b8381101561233957815161232088826122c3565b975061232b836122db565b92505060018101905061230c565b5085935050505092915050565b6000602082019050818103600083015261236081846122e8565b905092915050565b61237181611c67565b811461237c57600080fd5b50565b60008135905061238e81612368565b92915050565b600080604083850312156123ab576123aa611bd8565b5b60006123b985828601611bf9565b92505060206123ca8582860161237f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061240e82611b9a565b915061241983611b9a565b9250828203905081811115612431576124306123d4565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061247182611b9a565b915061247c83611b9a565b9250828201905080821115612494576124936123d4565b5b92915050565b60006124a582611b9a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124d7576124d66123d4565b5b600182019050919050565b600081905092915050565b50565b60006124fd6000836124e2565b9150612508826124ed565b600082019050919050565b600061251e826124f0565b9150819050919050565b600060408201905061253d6000830185611ba4565b61254a60208301846121a0565b9392505050565b600061255c82611b9a565b915061256783611b9a565b925082820261257581611b9a565b9150828204841483151761258c5761258b6123d4565b5b5092915050565b600061259e82611c67565b91506125a983611c67565b92508282039050818112600084121682821360008512151617156125d0576125cf6123d4565b5b92915050565b6000819050919050565b6000819050919050565b60006126056126006125fb846125d6565b6125e0565b611b9a565b9050919050565b612615816125ea565b82525050565b60006080820190506126306000830187612214565b61263d6020830186611ba4565b61264a604083018561260c565b61265760608301846121a0565b95945050505050565b600069ffffffffffffffffffff82169050919050565b61267f81612660565b811461268a57600080fd5b50565b60008151905061269c81612676565b92915050565b6000815190506126b181612368565b92915050565b6000815190506126c681611be2565b92915050565b600080600080600060a086880312156126e8576126e7611bd8565b5b60006126f68882890161268d565b9550506020612707888289016126a2565b9450506040612718888289016126b7565b9350506060612729888289016126b7565b925050608061273a8882890161268d565b9150509295509295909350565b61275081612223565b811461275b57600080fd5b50565b60008151905061276d81612747565b92915050565b60006020828403121561278957612788611bd8565b5b60006127978482850161275e565b9150509291505056fea26469706673582212208cf4b6eefcd0131e9f00f450e2dd97e3fb13e20e80784e1e5637e9977eea4f7164736f6c63430008110033";

type PredictionContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredictionContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredictionContract__factory extends ContractFactory {
  constructor(...args: PredictionContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    addresses: PromiseOrValue<string>[],
    entranceFee: PromiseOrValue<BigNumberish>,
    interval: PromiseOrValue<BigNumberish>,
    rewards: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PredictionContract> {
    return super.deploy(
      addresses,
      entranceFee,
      interval,
      rewards,
      overrides || {}
    ) as Promise<PredictionContract>;
  }
  override getDeployTransaction(
    addresses: PromiseOrValue<string>[],
    entranceFee: PromiseOrValue<BigNumberish>,
    interval: PromiseOrValue<BigNumberish>,
    rewards: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      addresses,
      entranceFee,
      interval,
      rewards,
      overrides || {}
    );
  }
  override attach(address: string): PredictionContract {
    return super.attach(address) as PredictionContract;
  }
  override connect(signer: Signer): PredictionContract__factory {
    return super.connect(signer) as PredictionContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredictionContractInterface {
    return new utils.Interface(_abi) as PredictionContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PredictionContract {
    return new Contract(address, _abi, signerOrProvider) as PredictionContract;
  }
}
