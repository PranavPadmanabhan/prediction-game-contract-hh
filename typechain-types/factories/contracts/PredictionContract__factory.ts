/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PredictionContract,
  PredictionContractInterface,
} from "../../contracts/PredictionContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "entranceFeeList",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numOfPlayers",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Admin_Withdraw_Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__Not_Available",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__TopUp_error",
    type: "error",
  },
  {
    inputs: [],
    name: "Withdraw__Failed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "predictedValue",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "predictedAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "difference",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "NewPrediction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ResultAnnounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "TopUpSuccessfull",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "WithdrawSuccessfull",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "Refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "entranceFee",
        type: "uint256",
      },
    ],
    name: "addContest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "declareCompletetion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getContest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "entranceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPlayers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numOfPredictions",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Contest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getContestPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContests",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "entranceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPlayers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numOfPredictions",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Contest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfContests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfMaxPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getPredictions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "contestId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resultTime",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getWinners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_predictedValue",
        type: "int256",
      },
    ],
    name: "predict",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewards",
        type: "uint256[]",
      },
    ],
    name: "setReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "updateNumoFPlayers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateTimeStamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "updateWinnerList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withDrawContractFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620036933803806200369383398181016040528101906200003791906200066f565b4260008190555082600190805190602001906200005692919062000270565b5083600390805190602001906200006f929190620002c2565b508160a081815250503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600281905550620000c3620000cd60201b60201c565b5050505062000805565b60005b6003805490508110156200026d5760005b600180549050811015620002565760046040518060a0016040528060016004805490506200011091906200074e565b8152602001600385815481106200012c576200012b62000789565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001848154811062000189576200018862000789565b5b906000526020600020015481526020016002548152602001600081525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040155505080806200024d90620007b8565b915050620000e1565b5080806200026490620007b8565b915050620000d0565b50565b828054828255906000526020600020908101928215620002af579160200282015b82811115620002ae57825182559160200191906001019062000291565b5b509050620002be919062000351565b5090565b8280548282559060005260206000209081019282156200033e579160200282015b828111156200033d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620002e3565b5b5090506200034d919062000351565b5090565b5b808211156200036c57600081600090555060010162000352565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003d48262000389565b810181811067ffffffffffffffff82111715620003f657620003f56200039a565b5b80604052505050565b60006200040b62000370565b9050620004198282620003c9565b919050565b600067ffffffffffffffff8211156200043c576200043b6200039a565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200047f8262000452565b9050919050565b620004918162000472565b81146200049d57600080fd5b50565b600081519050620004b18162000486565b92915050565b6000620004ce620004c8846200041e565b620003ff565b90508083825260208201905060208402830185811115620004f457620004f36200044d565b5b835b818110156200052157806200050c8882620004a0565b845260208401935050602081019050620004f6565b5050509392505050565b600082601f83011262000543576200054262000384565b5b815162000555848260208601620004b7565b91505092915050565b600067ffffffffffffffff8211156200057c576200057b6200039a565b5b602082029050602081019050919050565b6000819050919050565b620005a2816200058d565b8114620005ae57600080fd5b50565b600081519050620005c28162000597565b92915050565b6000620005df620005d9846200055e565b620003ff565b905080838252602082019050602084028301858111156200060557620006046200044d565b5b835b818110156200063257806200061d8882620005b1565b84526020840193505060208101905062000607565b5050509392505050565b600082601f83011262000654576200065362000384565b5b815162000666848260208601620005c8565b91505092915050565b600080600080608085870312156200068c576200068b6200037a565b5b600085015167ffffffffffffffff811115620006ad57620006ac6200037f565b5b620006bb878288016200052b565b945050602085015167ffffffffffffffff811115620006df57620006de6200037f565b5b620006ed878288016200063c565b93505060406200070087828801620005b1565b92505060606200071387828801620005b1565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200075b826200058d565b915062000768836200058d565b92508282019050808211156200078357620007826200071f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000620007c5826200058d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620007fa57620007f96200071f565b5b600182019050919050565b60805160a051612dff6200089460003960008181610b5301528181610c7901528181611206015281816117ca01526118a201526000818161089a01528181610932015281816109c201528181610a9001528181610cfa01528181610e4601528181610f9f0152818161111801528181611316015281816113a6015281816114dc0152611a9e0152612dff6000f3fe6080604052600436106101b75760003560e01c806385eddeea116100ec578063b94fe9171161008a578063d27e80b511610064578063d27e80b5146105de578063d74497c91461061b578063d92b2b5414610644578063f1813d511461066d576101b7565b8063b94fe9171461054c578063bc01d98d1461058a578063bfaba76a146105b3576101b7565b8063904b9f72116100c6578063904b9f72146104b157806391ad27b4146104ee578063a26759cb14610519578063b17739e314610523576101b7565b806385eddeea146104205780638731c63014610449578063893d20e814610486576101b7565b80634585e33b116101595780636e04ff0d116101335780636e04ff0d1461035357806370a08231146103915780637323aa7d146103ce57806384928713146103f7576101b7565b80634585e33b146102c25780636997bae9146102eb5780636b1426a414610316576101b7565b806329ddb9391161019557806329ddb9391461022e5780632e1a7d4d14610257578063320229eb146102805780633664a877146102ab576101b7565b806311797369146101bc57806312b58349146101e7578063155dd5ee14610212575b600080fd5b3480156101c857600080fd5b506101d16106aa565b6040516101de9190611e83565b60405180910390f35b3480156101f357600080fd5b506101fc6106b7565b6040516102099190611e83565b60405180910390f35b61022c60048036038101906102279190611ede565b6106bf565b005b34801561023a57600080fd5b5061025560048036038101906102509190611ede565b610898565b005b34801561026357600080fd5b5061027e60048036038101906102799190611ede565b610930565b005b34801561028c57600080fd5b50610295610a85565b6040516102a29190611e83565b60405180910390f35b3480156102b757600080fd5b506102c0610a8e565b005b3480156102ce57600080fd5b506102e960048036038101906102e49190612051565b610b51565b005b3480156102f757600080fd5b50610300610bbc565b60405161030d9190611e83565b60405180910390f35b34801561032257600080fd5b5061033d60048036038101906103389190611ede565b610bc6565b60405161034a919061218a565b60405180910390f35b34801561035f57600080fd5b5061037a60048036038101906103759190612051565b610c73565b604051610388929190612246565b60405180910390f35b34801561039d57600080fd5b506103b860048036038101906103b391906122a2565b610caf565b6040516103c59190611e83565b60405180910390f35b3480156103da57600080fd5b506103f560048036038101906103f09190612397565b610cf8565b005b34801561040357600080fd5b5061041e600480360381019061041991906123f3565b610e44565b005b34801561042c57600080fd5b5061044760048036038101906104429190612512565b610f9d565b005b34801561045557600080fd5b50610470600480360381019061046b9190611ede565b6110d9565b60405161047d9190611e83565b60405180910390f35b34801561049257600080fd5b5061049b611114565b6040516104a89190612599565b60405180910390f35b3480156104bd57600080fd5b506104d860048036038101906104d39190611ede565b61113c565b6040516104e5919061262b565b60405180910390f35b3480156104fa57600080fd5b50610503611202565b6040516105109190611e83565b60405180910390f35b61052161122a565b005b34801561052f57600080fd5b5061054a60048036038101906105459190611ede565b611314565b005b34801561055857600080fd5b50610573600480360381019061056e9190611ede565b611469565b60405161058192919061267b565b60405180910390f35b34801561059657600080fd5b506105b160048036038101906105ac9190611ede565b6114da565b005b3480156105bf57600080fd5b506105c86115e8565b6040516105d591906127bb565b60405180910390f35b3480156105ea57600080fd5b5061060560048036038101906106009190611ede565b6116c5565b6040516106129190611e83565b60405180910390f35b34801561062757600080fd5b50610642600480360381019061063d9190612809565b6116ee565b005b34801561065057600080fd5b5061066b60048036038101906106669190612849565b611a9c565b005b34801561067957600080fd5b50610694600480360381019061068f9190611ede565b611c1b565b6040516106a191906129d5565b60405180910390f35b6000600480549050905090565b600047905090565b60016000815481106106d4576106d36129f7565b5b90600052602060002001548110801561072b5750600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481115b15610762576040517f3fb6985b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161078890612a57565b60006040518083038185875af1925050503d80600081146107c5576040519150601f19603f3d011682016040523d82523d6000602084013e6107ca565b606091505b5050905080610805576040517f3fb6985b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108549190612a9b565b925050819055507f79d6154499fe61db70df5e974d6947219675596a035f25c56e2dc7575d04187a823360405161088c929190612acf565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610926576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091d90612b55565b60405180910390fd5b8060028190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b590612b55565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1682604051610a0490612a57565b60006040518083038185875af1925050503d8060008114610a41576040519150601f19603f3d011682016040523d82523d6000602084013e610a46565b606091505b5050905080610a81576040517f04b765d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1390612b55565b60405180910390fd5b426000819055507f4341dddeeae96cb085a30b68a8c3e38b00f5b7c5ff4fa9f31079e5b41a9c69ad60405160405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000060005442610b809190612a9b565b10610bb957426000819055507f4341dddeeae96cb085a30b68a8c3e38b00f5b7c5ff4fa9f31079e5b41a9c69ad60405160405180910390a15b50565b6000600254905090565b606060066000600184610bd99190612a9b565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c6757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c1d575b50505050509050919050565b600060607f000000000000000000000000000000000000000000000000000000000000000060005442610ca69190612a9b565b10159150915091565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7d90612b55565b60405180910390fd5b60005b8251811015610e3f5760066000600184610da39190612a9b565b8152602001908152602001600020838281518110610dc457610dc36129f7565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610e3790612b75565b915050610d89565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ed2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec990612b55565b60405180910390fd5b60006004600184610ee39190612a9b565b81548110610ef457610ef36129f7565b5b906000526020600020906005020160020154905060005b8251811015610f97578160076000858481518110610f2c57610f2b6129f7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f7d9190612bbd565b925050819055508080610f8f90612b75565b915050610f0b565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102290612b55565b60405180910390fd5b60005b82518110156110d45781818151811061104a576110496129f7565b5b602002602001015160076000858481518110611069576110686129f7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ba9190612bbd565b9250508190555080806110cc90612b75565b91505061102e565b505050565b600060046001836110ea9190612a9b565b815481106110fb576110fa6129f7565b5b9060005260206000209060050201600201549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b611144611e25565b60046001836111539190612a9b565b81548110611164576111636129f7565b5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820154815250509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600160008154811061123f5761123e6129f7565b5b9060005260206000200154341015611283576040517f818f734e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112d29190612bbd565b925050819055507f30235040a226b2e9a074ef96d790e10e9ce5f2be30aaf8049fda6a5e03f14427343360405161130a929190612acf565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139990612b55565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040516113e890612a57565b60006040518083038185875af1925050503d8060008114611425576040519150601f19603f3d011682016040523d82523d6000602084013e61142a565b606091505b5050905080611465576040517f04b765d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000806000806114c960046001876114819190612a9b565b81548110611492576114916129f7565b5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611d2b565b915091508181935093505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155f90612b55565b60405180910390fd5b600560006001836115799190612a9b565b8152602001908152602001600020805490506008600060018461159c9190612a9b565b8152602001908152602001600020819055507ffba192deaecbe7fa98bd977ab6a41d5e30515950160612a6341b3f3477568f68816040516115dd9190611e83565b60405180910390a150565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156116bc57838290600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820154815250508152602001906001019061160c565b50505050905090565b6000600860006001846116d89190612a9b565b8152602001908152602001600020549050919050565b600060046001846116ff9190612a9b565b815481106117105761170f6129f7565b5b9060005260206000209060050201600201549050600860006001856117359190612a9b565b8152602001908152602001600020546002546117519190612bbd565b600560006001866117629190612a9b565b8152602001908152602001600020805490501015806117bf575080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b8061180457506103207f00000000000000000000000000000000000000000000000000000000000000006117f39190612a9b565b600054426118019190612a9b565b10155b1561183b576040517f761c1ce200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005600060018561184c9190612a9b565b81526020019081526020016000206040518060e00160405280858152602001848152602001428152602001600081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020017f00000000000000000000000000000000000000000000000000000000000000006000546118ce9190612bbd565b81525090806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601555050600860006001856119909190612a9b565b815260200190815260200160002054600560006001866119b09190612a9b565b8152602001908152602001600020805490506119cc9190612a9b565b60046001856119db9190612a9b565b815481106119ec576119eb6129f7565b5b90600052602060002090600502016004018190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a509190612a9b565b925050819055507f3a63f877abc26c9d8968076e2171dea3f3e5da8cb52d749794ebe85aeb3c9892824260003387604051611a8f959493929190612c36565b60405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2190612b55565b60405180910390fd5b60046040518060a001604052806001600480549050611b499190612bbd565b81526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016002548152602001600081525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015550505050565b606060056000600184611c2e9190612a9b565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611d2057838290600052602060002090600702016040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815260200160068201548152505081526020019060010190611c5c565b505050509050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9f9190612cf5565b50505091505060008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e169190612d9c565b90508181935093505050915091565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b6000819050919050565b611e7d81611e6a565b82525050565b6000602082019050611e986000830184611e74565b92915050565b6000604051905090565b600080fd5b600080fd5b611ebb81611e6a565b8114611ec657600080fd5b50565b600081359050611ed881611eb2565b92915050565b600060208284031215611ef457611ef3611ea8565b5b6000611f0284828501611ec9565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f5e82611f15565b810181811067ffffffffffffffff82111715611f7d57611f7c611f26565b5b80604052505050565b6000611f90611e9e565b9050611f9c8282611f55565b919050565b600067ffffffffffffffff821115611fbc57611fbb611f26565b5b611fc582611f15565b9050602081019050919050565b82818337600083830152505050565b6000611ff4611fef84611fa1565b611f86565b9050828152602081018484840111156120105761200f611f10565b5b61201b848285611fd2565b509392505050565b600082601f83011261203857612037611f0b565b5b8135612048848260208601611fe1565b91505092915050565b60006020828403121561206757612066611ea8565b5b600082013567ffffffffffffffff81111561208557612084611ead565b5b61209184828501612023565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120f1826120c6565b9050919050565b612101816120e6565b82525050565b600061211383836120f8565b60208301905092915050565b6000602082019050919050565b60006121378261209a565b61214181856120a5565b935061214c836120b6565b8060005b8381101561217d5781516121648882612107565b975061216f8361211f565b925050600181019050612150565b5085935050505092915050565b600060208201905081810360008301526121a4818461212c565b905092915050565b60008115159050919050565b6121c1816121ac565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122015780820151818401526020810190506121e6565b60008484015250505050565b6000612218826121c7565b61222281856121d2565b93506122328185602086016121e3565b61223b81611f15565b840191505092915050565b600060408201905061225b60008301856121b8565b818103602083015261226d818461220d565b90509392505050565b61227f816120e6565b811461228a57600080fd5b50565b60008135905061229c81612276565b92915050565b6000602082840312156122b8576122b7611ea8565b5b60006122c68482850161228d565b91505092915050565b600067ffffffffffffffff8211156122ea576122e9611f26565b5b602082029050602081019050919050565b600080fd5b600061231361230e846122cf565b611f86565b90508083825260208201905060208402830185811115612336576123356122fb565b5b835b8181101561235f578061234b888261228d565b845260208401935050602081019050612338565b5050509392505050565b600082601f83011261237e5761237d611f0b565b5b813561238e848260208601612300565b91505092915050565b600080604083850312156123ae576123ad611ea8565b5b600083013567ffffffffffffffff8111156123cc576123cb611ead565b5b6123d885828601612369565b92505060206123e985828601611ec9565b9150509250929050565b6000806040838503121561240a57612409611ea8565b5b600061241885828601611ec9565b925050602083013567ffffffffffffffff81111561243957612438611ead565b5b61244585828601612369565b9150509250929050565b600067ffffffffffffffff82111561246a57612469611f26565b5b602082029050602081019050919050565b600061248e6124898461244f565b611f86565b905080838252602082019050602084028301858111156124b1576124b06122fb565b5b835b818110156124da57806124c68882611ec9565b8452602084019350506020810190506124b3565b5050509392505050565b600082601f8301126124f9576124f8611f0b565b5b813561250984826020860161247b565b91505092915050565b6000806040838503121561252957612528611ea8565b5b600083013567ffffffffffffffff81111561254757612546611ead565b5b61255385828601612369565b925050602083013567ffffffffffffffff81111561257457612573611ead565b5b612580858286016124e4565b9150509250929050565b612593816120e6565b82525050565b60006020820190506125ae600083018461258a565b92915050565b6125bd81611e6a565b82525050565b60a0820160008201516125d960008501826125b4565b5060208201516125ec60208501826120f8565b5060408201516125ff60408501826125b4565b50606082015161261260608501826125b4565b50608082015161262560808501826125b4565b50505050565b600060a08201905061264060008301846125c3565b92915050565b6000819050919050565b61265981612646565b82525050565b600060ff82169050919050565b6126758161265f565b82525050565b60006040820190506126906000830185612650565b61269d602083018461266c565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60a0820160008201516126e660008501826125b4565b5060208201516126f960208501826120f8565b50604082015161270c60408501826125b4565b50606082015161271f60608501826125b4565b50608082015161273260808501826125b4565b50505050565b600061274483836126d0565b60a08301905092915050565b6000602082019050919050565b6000612768826126a4565b61277281856126af565b935061277d836126c0565b8060005b838110156127ae5781516127958882612738565b97506127a083612750565b925050600181019050612781565b5085935050505092915050565b600060208201905081810360008301526127d5818461275d565b905092915050565b6127e681612646565b81146127f157600080fd5b50565b600081359050612803816127dd565b92915050565b600080604083850312156128205761281f611ea8565b5b600061282e85828601611ec9565b925050602061283f858286016127f4565b9150509250929050565b600080604083850312156128605761285f611ea8565b5b600061286e8582860161228d565b925050602061287f85828601611ec9565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6128be81612646565b82525050565b60e0820160008201516128da60008501826125b4565b5060208201516128ed60208501826128b5565b50604082015161290060408501826125b4565b50606082015161291360608501826125b4565b50608082015161292660808501826120f8565b5060a082015161293960a08501826125b4565b5060c082015161294c60c08501826125b4565b50505050565b600061295e83836128c4565b60e08301905092915050565b6000602082019050919050565b600061298282612889565b61298c8185612894565b9350612997836128a5565b8060005b838110156129c85781516129af8882612952565b97506129ba8361296a565b92505060018101905061299b565b5085935050505092915050565b600060208201905081810360008301526129ef8184612977565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b6000612a41600083612a26565b9150612a4c82612a31565b600082019050919050565b6000612a6282612a34565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612aa682611e6a565b9150612ab183611e6a565b9250828203905081811115612ac957612ac8612a6c565b5b92915050565b6000604082019050612ae46000830185611e74565b612af1602083018461258a565b9392505050565b600082825260208201905092915050565b7f75736572206973206e6f742061646d696e000000000000000000000000000000600082015250565b6000612b3f601183612af8565b9150612b4a82612b09565b602082019050919050565b60006020820190508181036000830152612b6e81612b32565b9050919050565b6000612b8082611e6a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612bb257612bb1612a6c565b5b600182019050919050565b6000612bc882611e6a565b9150612bd383611e6a565b9250828201905080821115612beb57612bea612a6c565b5b92915050565b6000819050919050565b6000819050919050565b6000612c20612c1b612c1684612bf1565b612bfb565b611e6a565b9050919050565b612c3081612c05565b82525050565b600060a082019050612c4b6000830188612650565b612c586020830187611e74565b612c656040830186612c27565b612c72606083018561258a565b612c7f6080830184611e74565b9695505050505050565b600069ffffffffffffffffffff82169050919050565b612ca881612c89565b8114612cb357600080fd5b50565b600081519050612cc581612c9f565b92915050565b600081519050612cda816127dd565b92915050565b600081519050612cef81611eb2565b92915050565b600080600080600060a08688031215612d1157612d10611ea8565b5b6000612d1f88828901612cb6565b9550506020612d3088828901612ccb565b9450506040612d4188828901612ce0565b9350506060612d5288828901612ce0565b9250506080612d6388828901612cb6565b9150509295509295909350565b612d798161265f565b8114612d8457600080fd5b50565b600081519050612d9681612d70565b92915050565b600060208284031215612db257612db1611ea8565b5b6000612dc084828501612d87565b9150509291505056fea26469706673582212204ecd6fac65b221fff279359a75b49fa18e613313fd16b0bf411e4afa0af3bc0664736f6c63430008110033";

type PredictionContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredictionContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredictionContract__factory extends ContractFactory {
  constructor(...args: PredictionContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    addresses: PromiseOrValue<string>[],
    entranceFeeList: PromiseOrValue<BigNumberish>[],
    interval: PromiseOrValue<BigNumberish>,
    numOfPlayers: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PredictionContract> {
    return super.deploy(
      addresses,
      entranceFeeList,
      interval,
      numOfPlayers,
      overrides || {}
    ) as Promise<PredictionContract>;
  }
  override getDeployTransaction(
    addresses: PromiseOrValue<string>[],
    entranceFeeList: PromiseOrValue<BigNumberish>[],
    interval: PromiseOrValue<BigNumberish>,
    numOfPlayers: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      addresses,
      entranceFeeList,
      interval,
      numOfPlayers,
      overrides || {}
    );
  }
  override attach(address: string): PredictionContract {
    return super.attach(address) as PredictionContract;
  }
  override connect(signer: Signer): PredictionContract__factory {
    return super.connect(signer) as PredictionContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredictionContractInterface {
    return new utils.Interface(_abi) as PredictionContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PredictionContract {
    return new Contract(address, _abi, signerOrProvider) as PredictionContract;
  }
}
