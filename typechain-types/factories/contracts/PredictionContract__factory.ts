/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PredictionContract,
  PredictionContractInterface,
} from "../../contracts/PredictionContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "entranceFeeList",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numOfPlayers",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Admin_Withdraw_Failed",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__Not_Available",
    type: "error",
  },
  {
    inputs: [],
    name: "Prediction__TopUp_error",
    type: "error",
  },
  {
    inputs: [],
    name: "Withdraw__Failed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "ContestCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "predictedValue",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "predictedAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "difference",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "NewPrediction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ResultAnnounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "TopUpSuccessfull",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "WithdrawSuccessfull",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "Refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "entranceFee",
        type: "uint256",
      },
    ],
    name: "addContest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "declareCompletetion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getContest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "entranceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPlayers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numOfPredictions",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Contest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getContestPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContests",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "priceFeedAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "entranceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPlayers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numOfPredictions",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Contest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getEntranceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfContests",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumOfMaxPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getPredictions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "contestId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resultTime",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPredictionsOfUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "contestId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "predictedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "predictedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difference",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resultTime",
            type: "uint256",
          },
        ],
        internalType: "struct PredictionContract.Prediction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "getWinners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_predictedValue",
        type: "int256",
      },
    ],
    name: "predict",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewards",
        type: "uint256[]",
      },
    ],
    name: "setReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "updateNumoFPlayers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateTimeStamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "contestId",
        type: "uint256",
      },
    ],
    name: "updateWinnerList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620038403803806200384083398181016040528101906200003791906200066f565b4260008190555082600190805190602001906200005692919062000270565b5083600390805190602001906200006f929190620002c2565b508160a081815250503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600281905550620000c3620000cd60201b60201c565b5050505062000805565b60005b6003805490508110156200026d5760005b600180549050811015620002565760046040518060a0016040528060016004805490506200011091906200074e565b8152602001600385815481106200012c576200012b62000789565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001848154811062000189576200018862000789565b5b906000526020600020015481526020016002548152602001600081525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040155505080806200024d90620007b8565b915050620000e1565b5080806200026490620007b8565b915050620000d0565b50565b828054828255906000526020600020908101928215620002af579160200282015b82811115620002ae57825182559160200191906001019062000291565b5b509050620002be919062000351565b5090565b8280548282559060005260206000209081019282156200033e579160200282015b828111156200033d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620002e3565b5b5090506200034d919062000351565b5090565b5b808211156200036c57600081600090555060010162000352565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003d48262000389565b810181811067ffffffffffffffff82111715620003f657620003f56200039a565b5b80604052505050565b60006200040b62000370565b9050620004198282620003c9565b919050565b600067ffffffffffffffff8211156200043c576200043b6200039a565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200047f8262000452565b9050919050565b620004918162000472565b81146200049d57600080fd5b50565b600081519050620004b18162000486565b92915050565b6000620004ce620004c8846200041e565b620003ff565b90508083825260208201905060208402830185811115620004f457620004f36200044d565b5b835b818110156200052157806200050c8882620004a0565b845260208401935050602081019050620004f6565b5050509392505050565b600082601f83011262000543576200054262000384565b5b815162000555848260208601620004b7565b91505092915050565b600067ffffffffffffffff8211156200057c576200057b6200039a565b5b602082029050602081019050919050565b6000819050919050565b620005a2816200058d565b8114620005ae57600080fd5b50565b600081519050620005c28162000597565b92915050565b6000620005df620005d9846200055e565b620003ff565b905080838252602082019050602084028301858111156200060557620006046200044d565b5b835b818110156200063257806200061d8882620005b1565b84526020840193505060208101905062000607565b5050509392505050565b600082601f83011262000654576200065362000384565b5b815162000666848260208601620005c8565b91505092915050565b600080600080608085870312156200068c576200068b6200037a565b5b600085015167ffffffffffffffff811115620006ad57620006ac6200037f565b5b620006bb878288016200052b565b945050602085015167ffffffffffffffff811115620006df57620006de6200037f565b5b620006ed878288016200063c565b93505060406200070087828801620005b1565b92505060606200071387828801620005b1565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200075b826200058d565b915062000768836200058d565b92508282019050808211156200078357620007826200071f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000620007c5826200058d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620007fa57620007f96200071f565b5b600182019050919050565b60805160a051612fba6200088660003960008181610b6701528181610c8d0152818161121a015281816116c001526117980152600081816108ae01528181610946015281816109d601528181610aa401528181610d0e01528181610e5a01528181610fb30152818161112c0152818161139b01526119940152612fba6000f3fe6080604052600436106101b75760003560e01c806385eddeea116100ec578063bc01d98d1161008a578063d74497c911610064578063d74497c9146105f2578063d92b2b541461061b578063daa0ff0014610644578063f1813d5114610681576101b7565b8063bc01d98d14610561578063bfaba76a1461058a578063d27e80b5146105b5576101b7565b8063904b9f72116100c6578063904b9f72146104b157806391ad27b4146104ee578063a26759cb14610519578063b94fe91714610523576101b7565b806385eddeea146104205780638731c63014610449578063893d20e814610486576101b7565b80634585e33b116101595780636e04ff0d116101335780636e04ff0d1461035357806370a08231146103915780637323aa7d146103ce57806384928713146103f7576101b7565b80634585e33b146102c25780636997bae9146102eb5780636b1426a414610316576101b7565b806329ddb9391161019557806329ddb9391461022e5780632e1a7d4d14610257578063320229eb146102805780633664a877146102ab576101b7565b806311797369146101bc57806312b58349146101e7578063155dd5ee14610212575b600080fd5b3480156101c857600080fd5b506101d16106be565b6040516101de9190611f95565b60405180910390f35b3480156101f357600080fd5b506101fc6106cb565b6040516102099190611f95565b60405180910390f35b61022c60048036038101906102279190611ff0565b6106d3565b005b34801561023a57600080fd5b5061025560048036038101906102509190611ff0565b6108ac565b005b34801561026357600080fd5b5061027e60048036038101906102799190611ff0565b610944565b005b34801561028c57600080fd5b50610295610a99565b6040516102a29190611f95565b60405180910390f35b3480156102b757600080fd5b506102c0610aa2565b005b3480156102ce57600080fd5b506102e960048036038101906102e49190612163565b610b65565b005b3480156102f757600080fd5b50610300610bd0565b60405161030d9190611f95565b60405180910390f35b34801561032257600080fd5b5061033d60048036038101906103389190611ff0565b610bda565b60405161034a919061229c565b60405180910390f35b34801561035f57600080fd5b5061037a60048036038101906103759190612163565b610c87565b604051610388929190612358565b60405180910390f35b34801561039d57600080fd5b506103b860048036038101906103b391906123b4565b610cc3565b6040516103c59190611f95565b60405180910390f35b3480156103da57600080fd5b506103f560048036038101906103f091906124a9565b610d0c565b005b34801561040357600080fd5b5061041e60048036038101906104199190612505565b610e58565b005b34801561042c57600080fd5b5061044760048036038101906104429190612624565b610fb1565b005b34801561045557600080fd5b50610470600480360381019061046b9190611ff0565b6110ed565b60405161047d9190611f95565b60405180910390f35b34801561049257600080fd5b5061049b611128565b6040516104a891906126ab565b60405180910390f35b3480156104bd57600080fd5b506104d860048036038101906104d39190611ff0565b611150565b6040516104e5919061273d565b60405180910390f35b3480156104fa57600080fd5b50610503611216565b6040516105109190611f95565b60405180910390f35b61052161123e565b005b34801561052f57600080fd5b5061054a60048036038101906105459190611ff0565b611328565b60405161055892919061278d565b60405180910390f35b34801561056d57600080fd5b5061058860048036038101906105839190611ff0565b611399565b005b34801561059657600080fd5b5061059f6114de565b6040516105ac91906128cd565b60405180910390f35b3480156105c157600080fd5b506105dc60048036038101906105d79190611ff0565b6115bb565b6040516105e99190611f95565b60405180910390f35b3480156105fe57600080fd5b506106196004803603810190610614919061291b565b6115e4565b005b34801561062757600080fd5b50610642600480360381019061063d919061295b565b611992565b005b34801561065057600080fd5b5061066b600480360381019061066691906123b4565b611b11565b6040516106789190612a38565b60405180910390f35b34801561068d57600080fd5b506106a860048036038101906106a39190611ff0565b611cda565b6040516106b59190612b90565b60405180910390f35b6000600480549050905090565b600047905090565b60016000815481106106e8576106e7612bb2565b5b90600052602060002001548110801561073f5750600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481115b15610776576040517f3fb6985b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161079c90612c12565b60006040518083038185875af1925050503d80600081146107d9576040519150601f19603f3d011682016040523d82523d6000602084013e6107de565b606091505b5050905080610819576040517f3fb6985b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108689190612c56565b925050819055507f79d6154499fe61db70df5e974d6947219675596a035f25c56e2dc7575d04187a82336040516108a0929190612c8a565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461093a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093190612d10565b60405180910390fd5b8060028190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c990612d10565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1682604051610a1890612c12565b60006040518083038185875af1925050503d8060008114610a55576040519150601f19603f3d011682016040523d82523d6000602084013e610a5a565b606091505b5050905080610a95576040517f04b765d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2790612d10565b60405180910390fd5b426000819055507f4341dddeeae96cb085a30b68a8c3e38b00f5b7c5ff4fa9f31079e5b41a9c69ad60405160405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000060005442610b949190612c56565b10610bcd57426000819055507f4341dddeeae96cb085a30b68a8c3e38b00f5b7c5ff4fa9f31079e5b41a9c69ad60405160405180910390a15b50565b6000600254905090565b606060066000600184610bed9190612c56565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c7b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c31575b50505050509050919050565b600060607f000000000000000000000000000000000000000000000000000000000000000060005442610cba9190612c56565b10159150915091565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9190612d10565b60405180910390fd5b60005b8251811015610e535760066000600184610db79190612c56565b8152602001908152602001600020838281518110610dd857610dd7612bb2565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508080610e4b90612d30565b915050610d9d565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edd90612d10565b60405180910390fd5b60006004600184610ef79190612c56565b81548110610f0857610f07612bb2565b5b906000526020600020906005020160020154905060005b8251811015610fab578160076000858481518110610f4057610f3f612bb2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f919190612d78565b925050819055508080610fa390612d30565b915050610f1f565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461103f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103690612d10565b60405180910390fd5b60005b82518110156110e85781818151811061105e5761105d612bb2565b5b60200260200101516007600085848151811061107d5761107c612bb2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ce9190612d78565b9250508190555080806110e090612d30565b915050611042565b505050565b600060046001836110fe9190612c56565b8154811061110f5761110e612bb2565b5b9060005260206000209060050201600201549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b611158611ee4565b60046001836111679190612c56565b8154811061117857611177612bb2565b5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820154815250509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600160008154811061125357611252612bb2565b5b9060005260206000200154341015611297576040517f818f734e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112e69190612d78565b925050819055507f30235040a226b2e9a074ef96d790e10e9ce5f2be30aaf8049fda6a5e03f14427343360405161131e929190612c8a565b60405180910390a1565b60008060008061138860046001876113409190612c56565b8154811061135157611350612bb2565b5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611dea565b915091508181935093505050915091565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141e90612d10565b60405180910390fd5b600560006001836114389190612c56565b8152602001908152602001600020805490506008600060018461145b9190612c56565b8152602001908152602001600020819055506000600460018361147e9190612c56565b8154811061148f5761148e612bb2565b5b9060005260206000209060050201600401819055507ffba192deaecbe7fa98bd977ab6a41d5e30515950160612a6341b3f3477568f68816040516114d39190611f95565b60405180910390a150565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156115b257838290600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152505081526020019060010190611502565b50505050905090565b6000600860006001846115ce9190612c56565b8152602001908152602001600020549050919050565b600060046001846115f59190612c56565b8154811061160657611605612bb2565b5b90600052602060002090600502016002015490506008600060018561162b9190612c56565b8152602001908152602001600020546002546116479190612d78565b600560006001866116589190612c56565b8152602001908152602001600020805490501015806116b5575080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b806116fa57506103207f00000000000000000000000000000000000000000000000000000000000000006116e99190612c56565b600054426116f79190612c56565b10155b15611731576040517f761c1ce200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560006001856117429190612c56565b81526020019081526020016000206040518060e00160405280858152602001848152602001428152602001600081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020017f00000000000000000000000000000000000000000000000000000000000000006000546117c49190612d78565b81525090806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601555050600860006001856118869190612c56565b815260200190815260200160002054600560006001866118a69190612c56565b8152602001908152602001600020805490506118c29190612c56565b60046001856118d19190612c56565b815481106118e2576118e1612bb2565b5b90600052602060002090600502016004018190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119469190612c56565b925050819055507f3a63f877abc26c9d8968076e2171dea3f3e5da8cb52d749794ebe85aeb3c9892824260003387604051611985959493929190612df1565b60405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1790612d10565b60405180910390fd5b60046040518060a001604052806001600480549050611a3f9190612d78565b81526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016002548152602001600081525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015550505050565b611b19611f29565b60005b600480549050811015611cd35760005b6005600083815260200190815260200160002080549050811015611cbf578373ffffffffffffffffffffffffffffffffffffffff16600560008481526020019081526020016000208281548110611b8657611b85612bb2565b5b906000526020600020906007020160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611cac57600560008381526020019081526020016000208181548110611bf857611bf7612bb2565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815260200160068201548152505092505050611cd5565b8080611cb790612d30565b915050611b2c565b508080611ccb90612d30565b915050611b1c565b505b919050565b606060056000600184611ced9190612c56565b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611ddf57838290600052602060002090600702016040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815260200160068201548152505081526020019060010190611d1b565b505050509050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5e9190612eb0565b50505091505060008473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611eb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed59190612f57565b90508181935093505050915091565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b6000819050919050565b611f8f81611f7c565b82525050565b6000602082019050611faa6000830184611f86565b92915050565b6000604051905090565b600080fd5b600080fd5b611fcd81611f7c565b8114611fd857600080fd5b50565b600081359050611fea81611fc4565b92915050565b60006020828403121561200657612005611fba565b5b600061201484828501611fdb565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61207082612027565b810181811067ffffffffffffffff8211171561208f5761208e612038565b5b80604052505050565b60006120a2611fb0565b90506120ae8282612067565b919050565b600067ffffffffffffffff8211156120ce576120cd612038565b5b6120d782612027565b9050602081019050919050565b82818337600083830152505050565b6000612106612101846120b3565b612098565b90508281526020810184848401111561212257612121612022565b5b61212d8482856120e4565b509392505050565b600082601f83011261214a5761214961201d565b5b813561215a8482602086016120f3565b91505092915050565b60006020828403121561217957612178611fba565b5b600082013567ffffffffffffffff81111561219757612196611fbf565b5b6121a384828501612135565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612203826121d8565b9050919050565b612213816121f8565b82525050565b6000612225838361220a565b60208301905092915050565b6000602082019050919050565b6000612249826121ac565b61225381856121b7565b935061225e836121c8565b8060005b8381101561228f5781516122768882612219565b975061228183612231565b925050600181019050612262565b5085935050505092915050565b600060208201905081810360008301526122b6818461223e565b905092915050565b60008115159050919050565b6122d3816122be565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123135780820151818401526020810190506122f8565b60008484015250505050565b600061232a826122d9565b61233481856122e4565b93506123448185602086016122f5565b61234d81612027565b840191505092915050565b600060408201905061236d60008301856122ca565b818103602083015261237f818461231f565b90509392505050565b612391816121f8565b811461239c57600080fd5b50565b6000813590506123ae81612388565b92915050565b6000602082840312156123ca576123c9611fba565b5b60006123d88482850161239f565b91505092915050565b600067ffffffffffffffff8211156123fc576123fb612038565b5b602082029050602081019050919050565b600080fd5b6000612425612420846123e1565b612098565b905080838252602082019050602084028301858111156124485761244761240d565b5b835b81811015612471578061245d888261239f565b84526020840193505060208101905061244a565b5050509392505050565b600082601f8301126124905761248f61201d565b5b81356124a0848260208601612412565b91505092915050565b600080604083850312156124c0576124bf611fba565b5b600083013567ffffffffffffffff8111156124de576124dd611fbf565b5b6124ea8582860161247b565b92505060206124fb85828601611fdb565b9150509250929050565b6000806040838503121561251c5761251b611fba565b5b600061252a85828601611fdb565b925050602083013567ffffffffffffffff81111561254b5761254a611fbf565b5b6125578582860161247b565b9150509250929050565b600067ffffffffffffffff82111561257c5761257b612038565b5b602082029050602081019050919050565b60006125a061259b84612561565b612098565b905080838252602082019050602084028301858111156125c3576125c261240d565b5b835b818110156125ec57806125d88882611fdb565b8452602084019350506020810190506125c5565b5050509392505050565b600082601f83011261260b5761260a61201d565b5b813561261b84826020860161258d565b91505092915050565b6000806040838503121561263b5761263a611fba565b5b600083013567ffffffffffffffff81111561265957612658611fbf565b5b6126658582860161247b565b925050602083013567ffffffffffffffff81111561268657612685611fbf565b5b612692858286016125f6565b9150509250929050565b6126a5816121f8565b82525050565b60006020820190506126c0600083018461269c565b92915050565b6126cf81611f7c565b82525050565b60a0820160008201516126eb60008501826126c6565b5060208201516126fe602085018261220a565b50604082015161271160408501826126c6565b50606082015161272460608501826126c6565b50608082015161273760808501826126c6565b50505050565b600060a08201905061275260008301846126d5565b92915050565b6000819050919050565b61276b81612758565b82525050565b600060ff82169050919050565b61278781612771565b82525050565b60006040820190506127a26000830185612762565b6127af602083018461277e565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60a0820160008201516127f860008501826126c6565b50602082015161280b602085018261220a565b50604082015161281e60408501826126c6565b50606082015161283160608501826126c6565b50608082015161284460808501826126c6565b50505050565b600061285683836127e2565b60a08301905092915050565b6000602082019050919050565b600061287a826127b6565b61288481856127c1565b935061288f836127d2565b8060005b838110156128c05781516128a7888261284a565b97506128b283612862565b925050600181019050612893565b5085935050505092915050565b600060208201905081810360008301526128e7818461286f565b905092915050565b6128f881612758565b811461290357600080fd5b50565b600081359050612915816128ef565b92915050565b6000806040838503121561293257612931611fba565b5b600061294085828601611fdb565b925050602061295185828601612906565b9150509250929050565b6000806040838503121561297257612971611fba565b5b60006129808582860161239f565b925050602061299185828601611fdb565b9150509250929050565b6129a481612758565b82525050565b60e0820160008201516129c060008501826126c6565b5060208201516129d3602085018261299b565b5060408201516129e660408501826126c6565b5060608201516129f960608501826126c6565b506080820151612a0c608085018261220a565b5060a0820151612a1f60a08501826126c6565b5060c0820151612a3260c08501826126c6565b50505050565b600060e082019050612a4d60008301846129aa565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60e082016000820151612a9560008501826126c6565b506020820151612aa8602085018261299b565b506040820151612abb60408501826126c6565b506060820151612ace60608501826126c6565b506080820151612ae1608085018261220a565b5060a0820151612af460a08501826126c6565b5060c0820151612b0760c08501826126c6565b50505050565b6000612b198383612a7f565b60e08301905092915050565b6000602082019050919050565b6000612b3d82612a53565b612b478185612a5e565b9350612b5283612a6f565b8060005b83811015612b83578151612b6a8882612b0d565b9750612b7583612b25565b925050600181019050612b56565b5085935050505092915050565b60006020820190508181036000830152612baa8184612b32565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b6000612bfc600083612be1565b9150612c0782612bec565b600082019050919050565b6000612c1d82612bef565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c6182611f7c565b9150612c6c83611f7c565b9250828203905081811115612c8457612c83612c27565b5b92915050565b6000604082019050612c9f6000830185611f86565b612cac602083018461269c565b9392505050565b600082825260208201905092915050565b7f75736572206973206e6f742061646d696e000000000000000000000000000000600082015250565b6000612cfa601183612cb3565b9150612d0582612cc4565b602082019050919050565b60006020820190508181036000830152612d2981612ced565b9050919050565b6000612d3b82611f7c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d6d57612d6c612c27565b5b600182019050919050565b6000612d8382611f7c565b9150612d8e83611f7c565b9250828201905080821115612da657612da5612c27565b5b92915050565b6000819050919050565b6000819050919050565b6000612ddb612dd6612dd184612dac565b612db6565b611f7c565b9050919050565b612deb81612dc0565b82525050565b600060a082019050612e066000830188612762565b612e136020830187611f86565b612e206040830186612de2565b612e2d606083018561269c565b612e3a6080830184611f86565b9695505050505050565b600069ffffffffffffffffffff82169050919050565b612e6381612e44565b8114612e6e57600080fd5b50565b600081519050612e8081612e5a565b92915050565b600081519050612e95816128ef565b92915050565b600081519050612eaa81611fc4565b92915050565b600080600080600060a08688031215612ecc57612ecb611fba565b5b6000612eda88828901612e71565b9550506020612eeb88828901612e86565b9450506040612efc88828901612e9b565b9350506060612f0d88828901612e9b565b9250506080612f1e88828901612e71565b9150509295509295909350565b612f3481612771565b8114612f3f57600080fd5b50565b600081519050612f5181612f2b565b92915050565b600060208284031215612f6d57612f6c611fba565b5b6000612f7b84828501612f42565b9150509291505056fea2646970667358221220ffe08ca61dc452fad67adeebf6b43f1bbee05909aa67fd73159d6154a3cf772264736f6c63430008110033";

type PredictionContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredictionContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredictionContract__factory extends ContractFactory {
  constructor(...args: PredictionContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    addresses: PromiseOrValue<string>[],
    entranceFeeList: PromiseOrValue<BigNumberish>[],
    interval: PromiseOrValue<BigNumberish>,
    numOfPlayers: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PredictionContract> {
    return super.deploy(
      addresses,
      entranceFeeList,
      interval,
      numOfPlayers,
      overrides || {}
    ) as Promise<PredictionContract>;
  }
  override getDeployTransaction(
    addresses: PromiseOrValue<string>[],
    entranceFeeList: PromiseOrValue<BigNumberish>[],
    interval: PromiseOrValue<BigNumberish>,
    numOfPlayers: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      addresses,
      entranceFeeList,
      interval,
      numOfPlayers,
      overrides || {}
    );
  }
  override attach(address: string): PredictionContract {
    return super.attach(address) as PredictionContract;
  }
  override connect(signer: Signer): PredictionContract__factory {
    return super.connect(signer) as PredictionContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredictionContractInterface {
    return new utils.Interface(_abi) as PredictionContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PredictionContract {
    return new Contract(address, _abi, signerOrProvider) as PredictionContract;
  }
}
